{
  "openapi": "3.0.3",
  "info": {
    "title": "Relation Graph API",
    "version": "0.1.5-acc.52"
  },
  "servers": [
    {
      "url": "https://{tenant}.continuousc.contc",
      "variables": {
        "tenant": {
          "enum": [
            "tenant-demo",
            "tenant-mdp"
          ],
          "default": "tenant-demo"
        }
      }
    }
  ],
  "paths": {
    "/api/alert_rules": {
      "get": {
        "summary": "Get a list of alert rule names",
        "operationId": "get_api-alert_rules-4bc08eb814eef5afac2bd210d6ad1246",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/alert_rules/{rule}": {
      "get": {
        "summary": "Get an alert rule specification and config",
        "operationId": "get_api-alert_rules-942c5644da3491fa8a3e74f7e836671b",
        "parameters": [
          {
            "name": "rule",
            "in": "path",
            "required": true,
            "schema": {
              "title": "AlertRuleTemplateName",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      },
      "put": {
        "summary": "Create or update an alert rule",
        "operationId": "put_api-alert_rules-942c5644da3491fa8a3e74f7e836671b",
        "parameters": [
          {
            "name": "rule",
            "in": "path",
            "required": true,
            "schema": {
              "title": "AlertRuleTemplateName",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutAlertRuleForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Editor": []
          }
        ]
      },
      "delete": {
        "summary": "Delete an alert rule",
        "operationId": "delete_api-alert_rules-942c5644da3491fa8a3e74f7e836671b",
        "parameters": [
          {
            "name": "rule",
            "in": "path",
            "required": true,
            "schema": {
              "title": "AlertRuleTemplateName",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Editor": []
          }
        ]
      }
    },
    "/api/alert_rules/{rule}/selectors": {
      "get": {
        "summary": "Get an alert rules selectors",
        "operationId": "get_api-alert_rules-4dddf55e8cd9ee39ce2ff0d331ec17d9",
        "parameters": [
          {
            "name": "rule",
            "in": "path",
            "required": true,
            "schema": {
              "title": "AlertRuleTemplateName",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/alert_rules/{rule}/selectors/{label}": {
      "get": {
        "summary": "Get an alert rule selectors values",
        "operationId": "get_api-alert_rules-6ee518ec12be7d2f900aecd51f1a6ed4",
        "parameters": [
          {
            "name": "rule",
            "in": "path",
            "required": true,
            "schema": {
              "title": "GetSelectorValues",
              "type": "array",
              "items": [
                {
                  "$ref": "#/components/schemas/AlertRuleTemplateName"
                },
                {
                  "$ref": "#/components/schemas/LabelName"
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/alerts/all": {
      "post": {
        "summary": "Query all open alerts",
        "operationId": "post_api-alerts-all-c2133f67756920fe2b938d6a6579a8bd",
        "parameters": [
          {
            "name": "include_unmatched",
            "in": "query",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/alerts/all/{time}": {
      "post": {
        "summary": "Query all open alertsat a point in time",
        "operationId": "post_api-alerts-all-4a138f3f83d101b3f271bd65c62c2dfe",
        "parameters": [
          {
            "name": "time",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Timestamp",
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "include_unmatched",
            "in": "query",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/alerts/bins": {
      "post": {
        "summary": "Query binned alerts",
        "operationId": "post_api-alerts-bins-d0f53a27d0816866180d65dda416cde9",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BinsParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/alerts/count/item/{item_id}": {
      "get": {
        "summary": "Get alert counts for an item and its descendants",
        "operationId": "get_api-alerts-count-item-c3dd54eb98ecbd54fb17358e3545258f",
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "ItemId",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/alerts/count/item/{item_id}/{time}": {
      "get": {
        "summary": "Get alert counts for an item and its descendants at a point in time",
        "operationId": "get_api-alerts-count-item-be11e69fba81d0668d68f78d9def784e",
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "GetAlertCountsAt",
              "type": "array",
              "items": [
                {
                  "$ref": "#/components/schemas/ItemId"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/alerts/events": {
      "post": {
        "summary": "Query alert changes in a time range",
        "operationId": "post_api-alerts-events-3b780ae129bf28fd3f7ccae59687a49c",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BinsParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/alerts/item/{item}": {
      "get": {
        "summary": "Query open alerts for an item",
        "operationId": "get_api-alerts-item-badc0e72af2b2c5b769a4d02cccf08ab",
        "parameters": [
          {
            "name": "item",
            "in": "path",
            "required": true,
            "schema": {
              "title": "ItemId",
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "include_children",
            "in": "query",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/alerts/item/{item}/{time}": {
      "get": {
        "summary": "Query open alerts for an item at a point in time",
        "operationId": "get_api-alerts-item-7770439a3df67d85cda363994f8c3429",
        "parameters": [
          {
            "name": "item",
            "in": "path",
            "required": true,
            "schema": {
              "title": "GetItemAlerts",
              "type": "array",
              "items": [
                {
                  "$ref": "#/components/schemas/ItemId"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          },
          {
            "name": "include_children",
            "in": "query",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/alerts/item_types": {
      "post": {
        "summary": "Query open alerts for multiple item types",
        "operationId": "post_api-alerts-item_types-fa663c89840350640a434c531b740f6a",
        "parameters": [
          {
            "name": "include_children",
            "in": "query",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemTypeAlertBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/alerts/item_types/{time}": {
      "post": {
        "summary": "Query open alerts for multipe item types at a point in time",
        "operationId": "post_api-alerts-item_types-71a35f143625c957a83f86e2dca1b9cd",
        "parameters": [
          {
            "name": "time",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Timestamp",
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "include_children",
            "in": "query",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemTypeAlertBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/alerts/items/{package}/{item_type}": {
      "get": {
        "summary": "Query open alerts for an item type",
        "operationId": "get_api-alerts-items-b1a836b6502cc51d25d13f2d3df98979",
        "parameters": [
          {
            "name": "package",
            "in": "path",
            "required": true,
            "schema": {
              "title": "GetItemTypeAlerts",
              "type": "array",
              "items": [
                {
                  "$ref": "#/components/schemas/PackageId"
                },
                {
                  "$ref": "#/components/schemas/ItemTypeId"
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          },
          {
            "name": "include_children",
            "in": "query",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/alerts/items/{package}/{item_type}/{time}": {
      "get": {
        "summary": "Query open alerts for an item type at a point in time",
        "operationId": "get_api-alerts-items-1026ee15012fb5e1733387022b27879a",
        "parameters": [
          {
            "name": "package",
            "in": "path",
            "required": true,
            "schema": {
              "title": "GetItemTypeAlertsAt",
              "type": "array",
              "items": [
                {
                  "$ref": "#/components/schemas/PackageId"
                },
                {
                  "$ref": "#/components/schemas/ItemTypeId"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ],
              "maxItems": 3,
              "minItems": 3
            }
          },
          {
            "name": "include_children",
            "in": "query",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/alerts/relation/{rel}": {
      "get": {
        "summary": "Query open alerts for a relation",
        "operationId": "get_api-alerts-relation-5a61a000c274d29a58c1bb5f121fa51d",
        "parameters": [
          {
            "name": "rel",
            "in": "path",
            "required": true,
            "schema": {
              "title": "RelationId",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/alerts/relation/{rel}/{time}": {
      "get": {
        "summary": "Query open alerts for a relation at a point in time",
        "operationId": "get_api-alerts-relation-e7fcd91b84274080e00b9abe7292ac9d",
        "parameters": [
          {
            "name": "rel",
            "in": "path",
            "required": true,
            "schema": {
              "title": "GetRelationAlertsAt",
              "type": "array",
              "items": [
                {
                  "$ref": "#/components/schemas/RelationId"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/changes/bins": {
      "post": {
        "summary": "Get binned changes",
        "operationId": "post_api-changes-bins-d099ac847174d3a7df7e0f84b5337a05",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BinsParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/changes/events": {
      "post": {
        "summary": "Get individual changes",
        "operationId": "post_api-changes-events-b3d9f9052d1f6ba3377dcfbf05f5520f",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BinsParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BinnedEvents_for_DbItem"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/connections-package": {
      "get": {
        "summary": "List loaded connections packages",
        "operationId": "get_api-connections-package-5c9ad65fe7a024f4c4cf7fc273719d94",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionsPackageInfo"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/connections-package/{package}": {
      "get": {
        "summary": "Download a single connections package",
        "operationId": "get_api-connections-package-29093cce02f6ed2791d96dbab7471590",
        "parameters": [
          {
            "name": "package",
            "in": "path",
            "required": true,
            "schema": {
              "title": "ConnectionsPackageId",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionsPackage"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      },
      "put": {
        "summary": "Create or update a connections package",
        "operationId": "put_api-connections-package-29093cce02f6ed2791d96dbab7471590",
        "parameters": [
          {
            "name": "package",
            "in": "path",
            "required": true,
            "schema": {
              "title": "ConnectionsPackageId",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectionsPackage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Done"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Editor": []
          }
        ]
      },
      "delete": {
        "summary": "Remove a connections package",
        "operationId": "delete_api-connections-package-29093cce02f6ed2791d96dbab7471590",
        "parameters": [
          {
            "name": "package",
            "in": "path",
            "required": true,
            "schema": {
              "title": "ConnectionsPackageId",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Done"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Editor": []
          }
        ]
      }
    },
    "/api/dashboards": {
      "get": {
        "summary": "Get list of dashboards",
        "operationId": "get_api-dashboards-778aa5477f8258d931c852edbc9eb703",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/dashboards/{dashboard}": {
      "get": {
        "summary": "Get a dashboard definition",
        "operationId": "get_api-dashboards-ea6b5953211ed4cae2503597e120a851",
        "parameters": [
          {
            "name": "dashboard",
            "in": "path",
            "required": true,
            "schema": {
              "title": "DashboardId",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/elements": {
      "post": {
        "summary": "Get element types",
        "operationId": "post_api-elements-3fe009976726027c66de1b551661b895",
        "parameters": [
          {
            "name": "include_aggregated_status",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Elements"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Items_for_Augmented_for_Item_and_StatusInfo"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/elements/{time}": {
      "post": {
        "summary": "Get element types at a point in time",
        "operationId": "post_api-elements-aa86da821f7ed158a9993fcd48df45a6",
        "parameters": [
          {
            "name": "include_aggregated_status",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "time",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Timestamp",
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Elements"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Items_for_Augmented_for_Item_and_StatusInfo"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/info-query/metrics": {
      "post": {
        "summary": "Get info query metrics",
        "operationId": "post_api-info-query-metrics-b5c635ab9cfec6c0ccf0f6274d0f311a",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InfoQueryBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/item": {
      "get": {
        "summary": "List all items",
        "operationId": "get_api-item-2490f8ffde47d4c357b7356ded0f88fe",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      },
      "put": {
        "summary": "Create a new item",
        "operationId": "put_api-item-2490f8ffde47d4c357b7356ded0f88fe",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Item"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Editor": []
          }
        ]
      }
    },
    "/api/item/view/{package}/{item_type}": {
      "get": {
        "summary": "Get item type unique view",
        "operationId": "get_api-item-view-60cca7f4cc59e7c98bd201c08cf47f1b",
        "parameters": [
          {
            "name": "package",
            "in": "path",
            "required": true,
            "schema": {
              "title": "ItemTypeIdPath",
              "type": "array",
              "items": [
                {
                  "$ref": "#/components/schemas/PackageId"
                },
                {
                  "$ref": "#/components/schemas/ItemTypeId"
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/item/{id}": {
      "get": {
        "summary": "Get an item by id",
        "operationId": "get_api-item-446b04a6c9093bc63aa458a66fe2b2f1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "ItemId",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      },
      "put": {
        "summary": "Create or update an item with id",
        "operationId": "put_api-item-446b04a6c9093bc63aa458a66fe2b2f1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "ItemId",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Item"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Editor": []
          }
        ]
      },
      "delete": {
        "summary": "Delete an item",
        "operationId": "delete_api-item-446b04a6c9093bc63aa458a66fe2b2f1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "ItemId",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Editor": []
          }
        ]
      }
    },
    "/api/items": {
      "put": {
        "summary": "Create or update multiple items and relations",
        "operationId": "put_api-items-c11bcff936a2d7ff8ff232de884821ab",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Items"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Editor": []
          }
        ]
      }
    },
    "/api/items/count/aggr-status/item-type/{item_type}": {
      "get": {
        "summary": "Get aggregated status counts for an item type",
        "operationId": "get_api-items-count-aggr-status-item-type-9f88096f88348424884e226a79dfa38a",
        "parameters": [
          {
            "name": "numberOfItems",
            "in": "query",
            "required": false,
            "schema": {
              "default": 25,
              "type": "integer",
              "format": "uint",
              "minimum": 0.0
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/items/count/aggr-status/item-type/{item_type}/{time}": {
      "get": {
        "summary": "Get historical Get aggregated status counts for an item type",
        "operationId": "get_api-items-count-aggr-status-item-type-f7474b3ebf2660844c5f9353e23a11e9",
        "parameters": [
          {
            "name": "item_type",
            "in": "path",
            "required": true,
            "schema": {
              "title": "GetStatusCountsAtParams",
              "type": "array",
              "items": [
                {
                  "$ref": "#/components/schemas/Absolute_ItemTypeId"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          },
          {
            "name": "numberOfItems",
            "in": "query",
            "required": false,
            "schema": {
              "default": 25,
              "type": "integer",
              "format": "uint",
              "minimum": 0.0
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/items/count/descendants/{item_id}": {
      "get": {
        "summary": "Get descendant counts",
        "operationId": "get_api-items-count-descendants-210433b11a0993e27c19100572fe879d",
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "ItemId",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/items/count/descendants/{item_id}/{time}": {
      "get": {
        "summary": "Get historical descendant counts",
        "operationId": "get_api-items-count-descendants-0676af2a587b82b7b634016cd675aa0a",
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "GetCountsAt",
              "type": "array",
              "items": [
                {
                  "$ref": "#/components/schemas/ItemId"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/items/{pkg}": {
      "put": {
        "summary": "Create or update multiple items and relations relative to a package",
        "operationId": "put_api-items-af5b6ada4efb34616851134491003158",
        "parameters": [
          {
            "name": "pkg",
            "in": "path",
            "required": true,
            "schema": {
              "title": "PackageId",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Items"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Editor": []
          }
        ]
      }
    },
    "/api/metrics/bulk/instant": {
      "post": {
        "summary": "Bulk query metrics at a timestamp",
        "operationId": "post_api-metrics-bulk-instant-c27fe2608f4ad679de74b1a83ace1623",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkQueryParams_for_InstantQueryParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/metrics/bulk/range": {
      "post": {
        "summary": "Bulk query metrics over a time range",
        "operationId": "post_api-metrics-bulk-range-45ae9c4281087553636ca6a4e080661a",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkQueryParams_for_RangeQueryParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/metrics/instant": {
      "post": {
        "summary": "Query metrics at a timestamp",
        "operationId": "post_api-metrics-instant-d8708235afce957e9b9d02c02441f615",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryParams_for_InstantQueryParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/metrics/range": {
      "post": {
        "summary": "Query metrics over a time range",
        "operationId": "post_api-metrics-range-5f48bc2f79cac5fc6cd0dda0799eb0f6",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryParams_for_RangeQueryParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/metrics/range_raw": {
      "post": {
        "summary": "Query query range",
        "operationId": "post_api-metrics-range_raw-a627218e7fa7052a2392c4ba37f54f2f",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryRawParams_for_RangeQueryParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/metrics/sources/{promitem}": {
      "get": {
        "summary": "Get sources for a prometheus item",
        "operationId": "get_api-metrics-sources-1d271603f653bc04ef537472b999cdbf",
        "parameters": [
          {
            "name": "promitem",
            "in": "path",
            "required": true,
            "schema": {
              "title": "ItemName",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/package": {
      "get": {
        "summary": "List loaded packages",
        "operationId": "get_api-package-62d782e497d9ee940fb3268f82b23457",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageInfo"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/package/{package}": {
      "get": {
        "summary": "Download a single package",
        "operationId": "get_api-package-b87fad87381fc03c073bbfba052f7a5c",
        "parameters": [
          {
            "name": "package",
            "in": "path",
            "required": true,
            "schema": {
              "title": "PackageId",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Package"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      },
      "put": {
        "summary": "Load a new package",
        "operationId": "put_api-package-b87fad87381fc03c073bbfba052f7a5c",
        "parameters": [
          {
            "name": "package",
            "in": "path",
            "required": true,
            "schema": {
              "title": "PackageId",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Package"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Done"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Admin": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a package",
        "operationId": "delete_api-package-b87fad87381fc03c073bbfba052f7a5c",
        "parameters": [
          {
            "name": "package",
            "in": "path",
            "required": true,
            "schema": {
              "title": "PackageId",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Done"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Admin": []
          }
        ]
      }
    },
    "/api/packages": {
      "get": {
        "summary": "Download all loaded packages",
        "operationId": "get_api-packages-95be49f06ca411e6ea5790d99e2c62e1",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageData"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/prom-schema/generate": {
      "get": {
        "summary": "List prometheus schema modules in process of generation",
        "operationId": "get_api-prom-schema-generate-0233f5cc7152ab97c4b3c32c40e75395",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ModuleList",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ModuleName"
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/prom-schema/generate/{module}": {
      "get": {
        "summary": "Get information about a prometheus schema module in process of generation",
        "operationId": "get_api-prom-schema-generate-43d173b0f77323c2b47fabb024dc0306",
        "parameters": [
          {
            "name": "module",
            "in": "path",
            "required": true,
            "schema": {
              "title": "ModuleName",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleInfo"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      },
      "put": {
        "summary": "Create a prometheus schema module for schema generation",
        "operationId": "put_api-prom-schema-generate-43d173b0f77323c2b47fabb024dc0306",
        "parameters": [
          {
            "name": "module",
            "in": "path",
            "required": true,
            "schema": {
              "title": "ModuleName",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Created"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Editor": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a prometheus schema module in process of generation",
        "operationId": "delete_api-prom-schema-generate-43d173b0f77323c2b47fabb024dc0306",
        "parameters": [
          {
            "name": "module",
            "in": "path",
            "required": true,
            "schema": {
              "title": "ModuleName",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Deleted"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Editor": []
          }
        ]
      }
    },
    "/api/prom-schema/generate/{module}/choose/tree{path:/.*|$}": {
      "put": {
        "summary": "Make a choice at path",
        "operationId": "put_api-prom-schema-generate-4cd7fd1f139f569363ef7796995c5b17",
        "parameters": [
          {
            "name": "module",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ModuleName"
            }
          },
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChooseParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Done"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Editor": []
          }
        ]
      },
      "delete": {
        "summary": "Revert to default choice at and below path",
        "operationId": "delete_api-prom-schema-generate-4cd7fd1f139f569363ef7796995c5b17",
        "parameters": [
          {
            "name": "module",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ModuleName"
            }
          },
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Done"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Editor": []
          }
        ]
      }
    },
    "/api/prom-schema/generate/{module}/download": {
      "get": {
        "summary": "Download module",
        "operationId": "get_api-prom-schema-generate-3fcace7f8cd59a2a851c787d9bb03be2",
        "parameters": [
          {
            "name": "module",
            "in": "path",
            "required": true,
            "schema": {
              "title": "ModuleName",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Module"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/prom-schema/generate/{module}/hints/download": {
      "get": {
        "summary": "Download module hints",
        "operationId": "get_api-prom-schema-generate-bf91254b80a6371c1941aae4a206f6a5",
        "parameters": [
          {
            "name": "module",
            "in": "path",
            "required": true,
            "schema": {
              "title": "ModuleName",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenInfo"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/prom-schema/generate/{module}/info/tree{path:/.*|$}": {
      "get": {
        "summary": "Get info at path in the generated module tree",
        "operationId": "get_api-prom-schema-generate-88c48e0209d387e2f169c4a5d4620c25",
        "parameters": [
          {
            "name": "module",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ModuleName"
            }
          },
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateTreeInfo"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/prom-schema/generate/{module}/items/tree{path:/.*|$}": {
      "post": {
        "summary": "Get prometheus items at path",
        "operationId": "post_api-prom-schema-generate-8ae0d9076f354c792b9acd414f482af7",
        "parameters": [
          {
            "name": "module",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ModuleName"
            }
          },
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemsParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Items"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/prom-schema/generate/{module}/metrics": {
      "get": {
        "summary": "Get info about loaded prometheus metrics for schema generation",
        "operationId": "get_api-prom-schema-generate-ea3b52ef4f1743e9fb7666b468d3814f",
        "parameters": [
          {
            "name": "module",
            "in": "path",
            "required": true,
            "schema": {
              "title": "ModuleName",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoadedMetricsInfo"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      },
      "post": {
        "summary": "Load prometheus metrics for schema generation",
        "operationId": "post_api-prom-schema-generate-ea3b52ef4f1743e9fb7666b468d3814f",
        "parameters": [
          {
            "name": "module",
            "in": "path",
            "required": true,
            "schema": {
              "title": "ModuleName",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoadMetricsParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoadMetricsInfo"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Editor": []
          }
        ]
      }
    },
    "/api/prom-schema/generate/{module}/metrics/download": {
      "get": {
        "summary": "Download metrics",
        "operationId": "get_api-prom-schema-generate-4aadc79f9602153c3d1ca79b0aefd83c",
        "parameters": [
          {
            "name": "module",
            "in": "path",
            "required": true,
            "schema": {
              "title": "ModuleName",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DownloadMetrics",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Metric_for_Map_of_String_and_DataPoint2_for_Value"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/prom-schema/generate/{module}/metrics/tree{path:/.*|$}": {
      "post": {
        "summary": "Get prometheus metrics at path",
        "operationId": "post_api-prom-schema-generate-184830d779a6bb36f7b5b9ad256dd478",
        "parameters": [
          {
            "name": "module",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ModuleName"
            }
          },
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetricsParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricsData"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/prom-schema/generate/{module}/rename": {
      "post": {
        "summary": "Rename a prometheus schema module for schema generation",
        "operationId": "post_api-prom-schema-generate-a34fbed3fe3cb5fdbdb8960e3c802282",
        "parameters": [
          {
            "name": "module",
            "in": "path",
            "required": true,
            "schema": {
              "title": "ModuleName",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RenameModuleParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Renamed"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Editor": []
          }
        ]
      }
    },
    "/api/prom-schema/generate/{module}/rename/{item}": {
      "put": {
        "summary": "Rename a prometheus item",
        "operationId": "put_api-prom-schema-generate-b74aceafd2b27635e8971cec72ffc116",
        "parameters": [
          {
            "name": "module",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ItemName"
            }
          },
          {
            "name": "item",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ModuleName"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RenameItemParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Renamed"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Editor": []
          }
        ]
      },
      "delete": {
        "summary": "Unrename a prometheus item",
        "operationId": "delete_api-prom-schema-generate-b74aceafd2b27635e8971cec72ffc116",
        "parameters": [
          {
            "name": "module",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ItemName"
            }
          },
          {
            "name": "item",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ModuleName"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Done"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Editor": []
          }
        ]
      }
    },
    "/api/prom-schema/generate/{module}/split/query": {
      "put": {
        "summary": "Split by label at a query",
        "operationId": "put_api-prom-schema-generate-ff0a7fe2c2abc8ac39ee217f57386f76",
        "parameters": [
          {
            "name": "module",
            "in": "path",
            "required": true,
            "schema": {
              "title": "ModuleName",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SplitByQueryParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Done"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Editor": []
          }
        ]
      },
      "delete": {
        "summary": "Unsplit by label at a query",
        "operationId": "delete_api-prom-schema-generate-ff0a7fe2c2abc8ac39ee217f57386f76",
        "parameters": [
          {
            "name": "module",
            "in": "path",
            "required": true,
            "schema": {
              "title": "ModuleName",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SplitByQueryParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Done"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Editor": []
          }
        ]
      }
    },
    "/api/prom-schema/generate/{module}/split/tree{path:/.*|$}": {
      "put": {
        "summary": "Split by label at an item",
        "operationId": "put_api-prom-schema-generate-2db4474c419296a7349881a1a9277b69",
        "parameters": [
          {
            "name": "module",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ModuleName"
            }
          },
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SplitByParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Done"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Editor": []
          }
        ]
      },
      "delete": {
        "summary": "Unsplit by label at an item",
        "operationId": "delete_api-prom-schema-generate-2db4474c419296a7349881a1a9277b69",
        "parameters": [
          {
            "name": "module",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ModuleName"
            }
          },
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SplitByParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Done"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Editor": []
          }
        ]
      }
    },
    "/api/prom-schema/generate/{module}/tree": {
      "get": {
        "summary": "Get generated module tree",
        "operationId": "get_api-prom-schema-generate-7118337fe43a1b0d14707654f31cea97",
        "parameters": [
          {
            "name": "module",
            "in": "path",
            "required": true,
            "schema": {
              "title": "ModuleName",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Tree",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Node"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/prom-schema/info/item/{item:[^/:]+:[^/]+}": {
      "get": {
        "summary": "Get prometheus item info",
        "operationId": "get_api-prom-schema-info-item-7539ee3d22657ccb7d6fbe84973655c5",
        "parameters": [
          {
            "name": "item",
            "in": "path",
            "required": true,
            "schema": {
              "title": "String",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemInfo"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/prom-schema/info/module": {
      "get": {
        "summary": "Get prometheus module list",
        "operationId": "get_api-prom-schema-info-module-a65631f385dd4817bfb547f8cb01a0eb",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Modules"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/prom-schema/info/module/{mod:[^/]+}": {
      "get": {
        "summary": "Get prometheus module info",
        "operationId": "get_api-prom-schema-info-module-8d1e3f3f203e66080887984a4cbbec08",
        "parameters": [
          {
            "name": "mod",
            "in": "path",
            "required": true,
            "schema": {
              "title": "String",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModInfo"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/prom-schema/info/tree{path:/.*|$}": {
      "get": {
        "summary": "Get prometheus schema info",
        "operationId": "get_api-prom-schema-info-tree{path:-.*|$}-3cedf0f8cdbb5bc9887de32617d56762",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TreeInfo"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/prom-schema/items": {
      "get": {
        "summary": "Get prometheus item list",
        "operationId": "get_api-prom-schema-items-0558b36fcd5a74790c8dd1a28d8011d4",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromItemList"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/prom-schema/items/tree{path:/.*|$}": {
      "post": {
        "summary": "Get prometheus items",
        "operationId": "post_api-prom-schema-items-tree{path:-.*|$}-1d091eda3a58a9a0c38fa2c3d6c896c4",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemsParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Items"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/prom-schema/metrics/tree{path:/.*|$}": {
      "post": {
        "summary": "Get prometheus metrics",
        "operationId": "post_api-prom-schema-metrics-tree{path:-.*|$}-54bb8d2bc840c995523755d86f3a925a",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetricsParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricsData"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/prom-schema/tree": {
      "get": {
        "summary": "Get prometheus schema tree",
        "operationId": "get_api-prom-schema-tree-ede916f7de4ad25ddc8fb2a7d885ebb8",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Tree",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Node"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/query": {
      "post": {
        "summary": "Run a query",
        "operationId": "post_api-query-cf794541a341a52c22360c3691b7b4b5",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Query"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/query/{time}": {
      "post": {
        "summary": "Run a query at a point in time",
        "operationId": "post_api-query-55e4a5c417dbc0d863271d8c82c641e3",
        "parameters": [
          {
            "name": "time",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Timestamp",
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Query"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/relation": {
      "get": {
        "summary": "List all relations",
        "operationId": "get_api-relation-a6204db2d27ad54d2a69cd7e9d39c398",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      },
      "put": {
        "summary": "Create a relation",
        "operationId": "put_api-relation-a6204db2d27ad54d2a69cd7e9d39c398",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Relation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Editor": []
          }
        ]
      }
    },
    "/api/relation/{id}": {
      "put": {
        "summary": "Create or update a relation by id",
        "operationId": "put_api-relation-c74778c7c61ae2c84457a9e29909fa7f",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "RelationId",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Relation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Editor": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a relation",
        "operationId": "delete_api-relation-c74778c7c61ae2c84457a9e29909fa7f",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "ItemId",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Editor": []
          }
        ]
      }
    },
    "/api/search-domain": {
      "post": {
        "summary": "Run a search-domain query",
        "operationId": "post_api-search-domain-3813744daea64e5fcb87acceda9b906b",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Query"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/search-domain/{time}": {
      "post": {
        "summary": "Run a search-domain query at a point in time",
        "operationId": "post_api-search-domain-5d48caea8714f51f80553eae37e1a00c",
        "parameters": [
          {
            "name": "time",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Timestamp",
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Query"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/status": {
      "get": {
        "summary": "Get status map",
        "operationId": "get_api-status-3372e7c31d1eaae32cf561ed2a2ab917",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/status/bins": {
      "post": {
        "summary": "Query status change bins",
        "operationId": "post_api-status-bins-df7ff92abb502c04c8d25d686e39a319",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BinsParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/status/events": {
      "post": {
        "summary": "Query status changes",
        "operationId": "post_api-status-events-1c8824adf9e84ed0207a32d4a8b45a1a",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BinsParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BinnedEvents_for_StatusDoc"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/status/{time}": {
      "get": {
        "summary": "Get status map at a point in time",
        "operationId": "get_api-status-2ae3adcf8999a0550002c58214065d40",
        "parameters": [
          {
            "name": "time",
            "in": "path",
            "required": true,
            "schema": {
              "title": "GetStatusAt",
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/transaction": {
      "put": {
        "summary": "Create a transaction",
        "operationId": "put_api-transaction-75f9f1c620cc1f06140883d2f4deed31",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Editor": []
          }
        ]
      }
    },
    "/api/transaction/{tx}/abort": {
      "put": {
        "summary": "Abort a transaction",
        "operationId": "put_api-transaction-c19641cd42278281a8cf95e4e21f8b50",
        "parameters": [
          {
            "name": "tx",
            "in": "path",
            "required": true,
            "schema": {
              "title": "TransactionId",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Editor": []
          }
        ]
      }
    },
    "/api/transaction/{tx}/commit": {
      "put": {
        "summary": "Commit a transaction",
        "operationId": "put_api-transaction-5dfdd53234848a2f88fd694822f74529",
        "parameters": [
          {
            "name": "tx",
            "in": "path",
            "required": true,
            "schema": {
              "title": "TransactionId",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Editor": []
          }
        ]
      }
    },
    "/api/transaction/{tx}/item": {
      "put": {
        "summary": "Create an item inside a transaction",
        "operationId": "put_api-transaction-b1853eb93435c03a7bca2a15d5aed14c",
        "parameters": [
          {
            "name": "tx",
            "in": "path",
            "required": true,
            "schema": {
              "title": "TransactionId",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Item"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Editor": []
          }
        ]
      }
    },
    "/api/transaction/{tx}/item/{item_id}": {
      "post": {
        "summary": "Read an item inside a transaction",
        "operationId": "post_api-transaction-3e9f5159570188bd52fdd47dd15580bb",
        "parameters": [
          {
            "name": "tx",
            "in": "path",
            "required": true,
            "schema": {
              "title": "TransactionId",
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "ItemId",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Editor": []
          }
        ]
      },
      "put": {
        "summary": "Create or update an item inside a transaction",
        "operationId": "put_api-transaction-3e9f5159570188bd52fdd47dd15580bb",
        "parameters": [
          {
            "name": "tx",
            "in": "path",
            "required": true,
            "schema": {
              "title": "TransactionId",
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "ItemId",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Item"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Editor": []
          }
        ]
      },
      "delete": {
        "summary": "Delete an item inside a transaction",
        "operationId": "delete_api-transaction-3e9f5159570188bd52fdd47dd15580bb",
        "parameters": [
          {
            "name": "tx",
            "in": "path",
            "required": true,
            "schema": {
              "title": "TransactionId",
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "ItemId",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Editor": []
          }
        ]
      }
    },
    "/api/transaction/{tx}/items": {
      "put": {
        "summary": "Bulk update items and relations within a transaction",
        "operationId": "put_api-transaction-b3f6eecd785b375ce8a903251a482de8",
        "parameters": [
          {
            "name": "tx",
            "in": "path",
            "required": true,
            "schema": {
              "title": "TransactionId",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Items"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Editor": []
          }
        ]
      }
    },
    "/api/transaction/{tx}/items/{pkg}": {
      "put": {
        "summary": "Bulk update items and relations within a transaction, relative to a package",
        "operationId": "put_api-transaction-84a53342638c2546107f48c2ccbd0a63",
        "parameters": [
          {
            "name": "tx",
            "in": "path",
            "required": true,
            "schema": {
              "title": "TransactionId",
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "pkg",
            "in": "path",
            "required": true,
            "schema": {
              "title": "PackageId",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Items"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Editor": []
          }
        ]
      }
    },
    "/api/transaction/{tx}/relation": {
      "put": {
        "summary": "Create a relation inside a transaction",
        "operationId": "put_api-transaction-fb20037dfee0e9a6580c8c6cc03c493a",
        "parameters": [
          {
            "name": "tx",
            "in": "path",
            "required": true,
            "schema": {
              "title": "TransactionId",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Relation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Editor": []
          }
        ]
      }
    },
    "/api/transaction/{tx}/relation/{rel_id}": {
      "post": {
        "summary": "Read a relation inside a transaction",
        "operationId": "post_api-transaction-d9496f48b00b87cb8758934fa59e409f",
        "parameters": [
          {
            "name": "tx",
            "in": "path",
            "required": true,
            "schema": {
              "title": "TransactionId",
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "rel_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "RelationId",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Editor": []
          }
        ]
      },
      "put": {
        "summary": "Create or update a relation inside a transaction",
        "operationId": "put_api-transaction-d9496f48b00b87cb8758934fa59e409f",
        "parameters": [
          {
            "name": "tx",
            "in": "path",
            "required": true,
            "schema": {
              "title": "TransactionId",
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "rel_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "RelationId",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Relation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Editor": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a relation inside a transaction",
        "operationId": "delete_api-transaction-d9496f48b00b87cb8758934fa59e409f",
        "parameters": [
          {
            "name": "tx",
            "in": "path",
            "required": true,
            "schema": {
              "title": "TransactionId",
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "rel_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "RelationId",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Editor": []
          }
        ]
      }
    },
    "/api/types/item": {
      "get": {
        "summary": "List item types",
        "operationId": "get_api-types-item-c2687ce20abda1bdebbad3f33bdaf745",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "AbsItemTypeIds",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Absolute_ItemTypeId"
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/types/item/{package}": {
      "get": {
        "summary": "List item types for a package",
        "operationId": "get_api-types-item-2dab86969b5f7f4684e5f062e0400222",
        "parameters": [
          {
            "name": "package",
            "in": "path",
            "required": true,
            "schema": {
              "title": "PackageId",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ItemTypeIds",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemTypeId"
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/types/item/{package}/{type}": {
      "get": {
        "summary": "Get info on an item type",
        "operationId": "get_api-types-item-2578a64cb06d2ce54727fe031ee41f07",
        "parameters": [
          {
            "name": "package",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PackageId"
            }
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ItemTypeId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemTypeInfo"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/types/property": {
      "get": {
        "summary": "List property types",
        "operationId": "get_api-types-property-ddf577326ba19d392e35bf3b66f458a1",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/types/property/{package}": {
      "get": {
        "summary": "List property types for a package",
        "operationId": "get_api-types-property-619e5532f65563b7b27d393f566dba7c",
        "parameters": [
          {
            "name": "package",
            "in": "path",
            "required": true,
            "schema": {
              "title": "PackageId",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/types/property/{package}/{type}": {
      "get": {
        "summary": "Get info on a property type",
        "operationId": "get_api-types-property-88c76de994e539b6f9a653142f7ba9da",
        "parameters": [
          {
            "name": "package",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PackageId"
            }
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PropertyId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PropertyType"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/types/relation": {
      "get": {
        "summary": "List relation types",
        "operationId": "get_api-types-relation-5b3e28ff8d56b4aa49f571d2cf54f546",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "AbsRelationTypeIds",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Absolute_RelationTypeId"
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/types/relation/{package}": {
      "get": {
        "summary": "List item types for a package",
        "operationId": "get_api-types-relation-bb9e24f873ff8a3857e9a50eeaf9c17a",
        "parameters": [
          {
            "name": "package",
            "in": "path",
            "required": true,
            "schema": {
              "title": "PackageId",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "RelationTypeIds",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RelationTypeId"
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/types/relation/{package}/{type}": {
      "get": {
        "summary": "Get info on an item type",
        "operationId": "get_api-types-relation-cd8cad06576d7e0459b0f2bf765e8c3e",
        "parameters": [
          {
            "name": "package",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PackageId"
            }
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/RelationTypeId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationTypeInfo"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/types/selector": {
      "post": {
        "summary": "Get info for selector autocompletion",
        "operationId": "post_api-types-selector-951ae1f4ca09e0ea0b9ddab76ff4f80b",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SelectorCtx"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectorCtxInfo"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/version": {
      "get": {
        "summary": "Get the application version",
        "operationId": "get_api-version-5f4cac1cdb82904c0873630dd93553bd",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      }
    },
    "/api/views": {
      "get": {
        "summary": "Get list of views",
        "operationId": "get_api-views-da932167131cc37e6c0b62f383fade1e",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      },
      "put": {
        "summary": "Update view definitions",
        "operationId": "put_api-views-da932167131cc37e6c0b62f383fade1e",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Views"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Editor": []
          }
        ]
      }
    },
    "/api/views/{view}": {
      "get": {
        "summary": "Get a view definition",
        "operationId": "get_api-views-cce9236053a0f7544e8a21147ecf8883",
        "parameters": [
          {
            "name": "view",
            "in": "path",
            "required": true,
            "schema": {
              "title": "ViewId",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Viewer": []
          }
        ]
      },
      "put": {
        "summary": "Create or update a view definition",
        "operationId": "put_api-views-cce9236053a0f7544e8a21147ecf8883",
        "parameters": [
          {
            "name": "view",
            "in": "path",
            "required": true,
            "schema": {
              "title": "ViewId",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/View"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [
          {
            "Editor": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AbsItemTypeIds": {
        "title": "AbsItemTypeIds",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Absolute_ItemTypeId"
        },
        "uniqueItems": true
      },
      "AbsRelationTypeIds": {
        "title": "AbsRelationTypeIds",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Absolute_RelationTypeId"
        },
        "uniqueItems": true
      },
      "Absolute_ItemTypeId": {
        "type": "string"
      },
      "Absolute_PropertyId": {
        "type": "string"
      },
      "Absolute_RelationTypeId": {
        "type": "string"
      },
      "AlertRuleConfig_for_CustomAlertRuleForm": {
        "type": "object",
        "required": [
          "for",
          "labels",
          "params",
          "selectors"
        ],
        "properties": {
          "for": {
            "$ref": "#/components/schemas/PromDuration"
          },
          "labels": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "params": {
            "$ref": "#/components/schemas/CustomAlertRuleConfig"
          },
          "selectors": {
            "$ref": "#/components/schemas/MetricSelector"
          }
        }
      },
      "AlertRuleConfig_for_DynamicTracesAlertRuleForm": {
        "type": "object",
        "required": [
          "for",
          "labels",
          "params",
          "selectors"
        ],
        "properties": {
          "for": {
            "$ref": "#/components/schemas/PromDuration"
          },
          "labels": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "params": {
            "$ref": "#/components/schemas/DynamicTraceAlertRuleConfig"
          },
          "selectors": {
            "$ref": "#/components/schemas/MetricSelector"
          }
        }
      },
      "AlertRuleConfig_for_FixedTracesAlertRuleForm": {
        "type": "object",
        "required": [
          "for",
          "labels",
          "params",
          "selectors"
        ],
        "properties": {
          "for": {
            "$ref": "#/components/schemas/PromDuration"
          },
          "labels": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "params": {
            "$ref": "#/components/schemas/FixedTraceAlertRuleConfig"
          },
          "selectors": {
            "$ref": "#/components/schemas/MetricSelector"
          }
        }
      },
      "AlertRuleForm_for_CustomAlertRuleForm": {
        "type": "object",
        "required": [
          "configs",
          "template"
        ],
        "properties": {
          "configs": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/AlertRuleConfig_for_CustomAlertRuleForm"
            }
          },
          "template": {
            "$ref": "#/components/schemas/AlertRuleTemplate_for_CustomAlertRuleForm"
          }
        }
      },
      "AlertRuleForm_for_DynamicTracesAlertRuleForm": {
        "type": "object",
        "required": [
          "configs",
          "template"
        ],
        "properties": {
          "configs": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/AlertRuleConfig_for_DynamicTracesAlertRuleForm"
            }
          },
          "template": {
            "$ref": "#/components/schemas/AlertRuleTemplate_for_DynamicTracesAlertRuleForm"
          }
        }
      },
      "AlertRuleForm_for_FixedTracesAlertRuleForm": {
        "type": "object",
        "required": [
          "configs",
          "template"
        ],
        "properties": {
          "configs": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/AlertRuleConfig_for_FixedTracesAlertRuleForm"
            }
          },
          "template": {
            "$ref": "#/components/schemas/AlertRuleTemplate_for_FixedTracesAlertRuleForm"
          }
        }
      },
      "AlertRuleForms": {
        "oneOf": [
          {
            "title": "custom",
            "type": "object",
            "required": [
              "custom"
            ],
            "properties": {
              "custom": {
                "$ref": "#/components/schemas/AlertRuleForm_for_CustomAlertRuleForm"
              }
            },
            "additionalProperties": false
          },
          {
            "title": "fixed_traces",
            "type": "object",
            "required": [
              "fixed_traces"
            ],
            "properties": {
              "fixed_traces": {
                "$ref": "#/components/schemas/AlertRuleForm_for_FixedTracesAlertRuleForm"
              }
            },
            "additionalProperties": false
          },
          {
            "title": "dynamic_traces",
            "type": "object",
            "required": [
              "dynamic_traces"
            ],
            "properties": {
              "dynamic_traces": {
                "$ref": "#/components/schemas/AlertRuleForm_for_DynamicTracesAlertRuleForm"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "AlertRuleTemplateName": {
        "type": "string"
      },
      "AlertRuleTemplate_for_CustomAlertRuleForm": {
        "type": "object",
        "required": [
          "alert",
          "annotations",
          "default",
          "spec"
        ],
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/AlertRuleTemplateName"
          },
          "annotations": {
            "$ref": "#/components/schemas/Annotations_for_AnnotationTemplate"
          },
          "default": {
            "$ref": "#/components/schemas/AlertRuleConfig_for_CustomAlertRuleForm"
          },
          "spec": {
            "$ref": "#/components/schemas/CustomAlertRuleSpec"
          }
        }
      },
      "AlertRuleTemplate_for_DynamicTracesAlertRuleForm": {
        "type": "object",
        "required": [
          "alert",
          "annotations",
          "default",
          "spec"
        ],
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/AlertRuleTemplateName"
          },
          "annotations": {
            "$ref": "#/components/schemas/Annotations_for_AnnotationTemplate"
          },
          "default": {
            "$ref": "#/components/schemas/AlertRuleConfig_for_DynamicTracesAlertRuleForm"
          },
          "spec": {
            "$ref": "#/components/schemas/DynamicTraceAlertRuleSpec"
          }
        }
      },
      "AlertRuleTemplate_for_FixedTracesAlertRuleForm": {
        "type": "object",
        "required": [
          "alert",
          "annotations",
          "default",
          "spec"
        ],
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/AlertRuleTemplateName"
          },
          "annotations": {
            "$ref": "#/components/schemas/Annotations_for_AnnotationTemplate"
          },
          "default": {
            "$ref": "#/components/schemas/AlertRuleConfig_for_FixedTracesAlertRuleForm"
          },
          "spec": {
            "$ref": "#/components/schemas/FixedTraceAlertRuleSpec"
          }
        }
      },
      "Anchor": {
        "type": "object",
        "required": [
          "created",
          "from"
        ],
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "AnnotationTemplate": {
        "type": "string"
      },
      "Annotations_for_AnnotationTemplate": {
        "type": "object",
        "properties": {
          "description": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AnnotationTemplate"
              }
            ],
            "nullable": true
          },
          "runbook_url": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AnnotationTemplate"
              }
            ],
            "nullable": true
          },
          "summary": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AnnotationTemplate"
              }
            ],
            "nullable": true
          }
        }
      },
      "AnomalyTracesGraphType": {
        "oneOf": [
          {
            "title": "metric",
            "type": "object",
            "required": [
              "graph",
              "metric"
            ],
            "properties": {
              "confidence_interval": {
                "default": true,
                "type": "boolean"
              },
              "graph": {
                "type": "string",
                "enum": [
                  "metric"
                ]
              },
              "immediate_interval": {
                "default": "15m",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ImmediateInterval"
                  }
                ]
              },
              "metric": {
                "$ref": "#/components/schemas/TraceMetric"
              },
              "reference_interval": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ReferenceInterval"
                  }
                ],
                "nullable": true
              },
              "top": {
                "default": 5,
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            }
          },
          {
            "title": "score",
            "type": "object",
            "required": [
              "graph",
              "metric"
            ],
            "properties": {
              "aggr_factor": {
                "description": "A number between 0.0 and 1.0 that controls the effect of the total number of operation types on the aggregated anomaly score. An aggregation factor of zero means anomalies are summed, while an aggregation factor of one means the average is taken.",
                "default": 0.5,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CombinationFactor"
                  }
                ]
              },
              "graph": {
                "type": "string",
                "enum": [
                  "score"
                ]
              },
              "immediate_interval": {
                "default": "15m",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ImmediateInterval"
                  }
                ]
              },
              "metric": {
                "$ref": "#/components/schemas/TraceMetric"
              },
              "reference_interval": {
                "default": "7d",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ReferenceInterval"
                  }
                ]
              },
              "top": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0,
                "nullable": true
              }
            }
          }
        ]
      },
      "Augmented_for_Item_and_StatusInfo": {
        "type": "object",
        "required": [
          "info",
          "value"
        ],
        "properties": {
          "info": {
            "$ref": "#/components/schemas/StatusInfo"
          },
          "value": {
            "$ref": "#/components/schemas/Item"
          }
        }
      },
      "Augmented_for_Relation_and_StatusInfo": {
        "type": "object",
        "required": [
          "info",
          "value"
        ],
        "properties": {
          "info": {
            "$ref": "#/components/schemas/StatusInfo"
          },
          "value": {
            "$ref": "#/components/schemas/Relation"
          }
        }
      },
      "Bin": {
        "type": "object",
        "required": [
          "count",
          "from",
          "to"
        ],
        "properties": {
          "count": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "BinnedEvents_for_DbItem": {
        "title": "BinnedEvents_for_DbItem",
        "type": "object",
        "required": [
          "bins",
          "events"
        ],
        "properties": {
          "bins": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bin"
            }
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event_for_DbItem"
            }
          }
        }
      },
      "BinnedEvents_for_StatusDoc": {
        "title": "BinnedEvents_for_StatusDoc",
        "type": "object",
        "required": [
          "bins",
          "events"
        ],
        "properties": {
          "bins": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bin"
            }
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event_for_StatusDoc"
            }
          }
        }
      },
      "BinsParams": {
        "title": "BinsParams",
        "type": "object",
        "required": [
          "from",
          "interval",
          "items",
          "relations",
          "timezone",
          "to"
        ],
        "properties": {
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "interval": {
            "$ref": "#/components/schemas/Interval"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemId"
            },
            "uniqueItems": true
          },
          "relations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationId"
            },
            "uniqueItems": true
          },
          "step": {
            "default": 1,
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          },
          "timezone": {
            "type": "string"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "BulkQueryParams_for_InstantQueryParams": {
        "title": "BulkQueryParams_for_InstantQueryParams",
        "type": "object",
        "required": [
          "metrics"
        ],
        "properties": {
          "item_keys": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/LabelName"
              },
              "uniqueItems": true
            },
            "nullable": true
          },
          "item_queries": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "nullable": true
          },
          "metrics": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/QueryMetric"
            }
          },
          "sources": {
            "default": {},
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/SourceId"
            }
          },
          "time": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "BulkQueryParams_for_RangeQueryParams": {
        "title": "BulkQueryParams_for_RangeQueryParams",
        "type": "object",
        "required": [
          "end",
          "metrics",
          "start",
          "step"
        ],
        "properties": {
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "item_keys": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/LabelName"
              },
              "uniqueItems": true
            },
            "nullable": true
          },
          "item_queries": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "nullable": true
          },
          "metrics": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/QueryMetric"
            }
          },
          "sources": {
            "default": {},
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/SourceId"
            }
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "step": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "ByTheme_for_GraphColor": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/GraphColor"
          },
          {
            "type": "object",
            "required": [
              "dark",
              "light"
            ],
            "properties": {
              "dark": {
                "$ref": "#/components/schemas/GraphColor"
              },
              "light": {
                "$ref": "#/components/schemas/GraphColor"
              }
            }
          }
        ]
      },
      "ByTheme_for_String": {
        "anyOf": [
          {
            "type": "string"
          },
          {
            "type": "object",
            "required": [
              "dark",
              "light"
            ],
            "properties": {
              "dark": {
                "type": "string"
              },
              "light": {
                "type": "string"
              }
            }
          }
        ]
      },
      "Choice": {
        "type": "object",
        "required": [
          "choice",
          "choices",
          "query"
        ],
        "properties": {
          "choice": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelName"
            },
            "uniqueItems": true
          },
          "choices": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/LabelName"
              },
              "uniqueItems": true
            },
            "uniqueItems": true
          },
          "query": {
            "$ref": "#/components/schemas/MetricSelector"
          }
        }
      },
      "Choose": {
        "type": "object",
        "required": [
          "choice",
          "query"
        ],
        "properties": {
          "choice": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelName"
            },
            "uniqueItems": true
          },
          "query": {
            "$ref": "#/components/schemas/MetricSelector"
          }
        }
      },
      "ChooseParams": {
        "title": "ChooseParams",
        "type": "object",
        "required": [
          "choice"
        ],
        "properties": {
          "choice": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelName"
            },
            "uniqueItems": true
          }
        }
      },
      "CollectedInfo": {
        "type": "object",
        "required": [
          "elem",
          "keys",
          "query"
        ],
        "properties": {
          "elem": {
            "type": "string"
          },
          "keys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelName"
            },
            "uniqueItems": true
          },
          "query": {
            "$ref": "#/components/schemas/MetricSelector"
          }
        }
      },
      "CombinationFactor": {
        "type": "number",
        "format": "double"
      },
      "CombineScores": {
        "type": "object",
        "required": [
          "combine"
        ],
        "properties": {
          "combine": {
            "$ref": "#/components/schemas/CombinationFactor"
          }
        }
      },
      "ConnectionsPackage": {
        "title": "ConnectionsPackage",
        "type": "object",
        "required": [
          "version"
        ],
        "properties": {
          "items": {
            "default": {},
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ItemConnections"
            }
          },
          "relations": {
            "default": {},
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/RelationConnections"
            }
          },
          "requires": {
            "default": {
              "discovery": {},
              "prometheus": {}
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/ConnectionsRequires"
              }
            ]
          },
          "version": {
            "$ref": "#/components/schemas/PackageVersion"
          }
        }
      },
      "ConnectionsPackageInfo": {
        "title": "ConnectionsPackageInfo",
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/PackageVersion"
        }
      },
      "ConnectionsPackages": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/ConnectionsPackage"
        }
      },
      "ConnectionsRequires": {
        "type": "object",
        "properties": {
          "discovery": {
            "default": {},
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/PackageVersionReq"
            }
          },
          "prometheus": {
            "default": {},
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ModuleVersionReq"
            }
          }
        }
      },
      "Connector": {
        "type": "object",
        "required": [
          "groups"
        ],
        "properties": {
          "groups": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ConnectorRuleGroup"
            }
          }
        }
      },
      "ConnectorRule": {
        "type": "object",
        "required": [
          "source",
          "target",
          "template"
        ],
        "properties": {
          "source": {
            "$ref": "#/components/schemas/ItemSelector"
          },
          "target": {
            "$ref": "#/components/schemas/ItemSelector"
          },
          "template": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/TplVarDef"
            }
          }
        }
      },
      "ConnectorRuleGroup": {
        "type": "object",
        "required": [
          "rules"
        ],
        "properties": {
          "rules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConnectorRule"
            }
          }
        }
      },
      "Created": {
        "title": "Created",
        "type": "string",
        "enum": [
          "created"
        ]
      },
      "CustomAlertRuleConfig": {
        "type": "object",
        "required": [
          "instance",
          "params",
          "thresholds"
        ],
        "properties": {
          "instance": {
            "$ref": "#/components/schemas/InstanceAction"
          },
          "params": {
            "$ref": "#/components/schemas/ParamValues"
          },
          "thresholds": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ParamValues"
            }
          }
        }
      },
      "CustomAlertRuleSpec": {
        "type": "object",
        "required": [
          "expr",
          "item",
          "params"
        ],
        "properties": {
          "expr": {
            "$ref": "#/components/schemas/ExprImpl"
          },
          "item": {
            "$ref": "#/components/schemas/QualifiedItemName"
          },
          "params": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ParamSpec"
            }
          },
          "value_unit": {
            "default": "",
            "allOf": [
              {
                "$ref": "#/components/schemas/Unit"
              }
            ]
          }
        }
      },
      "Dashboard": {
        "type": "object",
        "properties": {
          "instance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InstanceDashboard"
              }
            ],
            "nullable": true
          },
          "type_range": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeRangeDashboard"
              }
            ],
            "nullable": true
          }
        }
      },
      "DashboardMetric": {
        "type": "object",
        "required": [
          "expr",
          "item",
          "name"
        ],
        "properties": {
          "display_unit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Unit"
              }
            ],
            "nullable": true
          },
          "documentation": {
            "type": "string",
            "nullable": true
          },
          "expr": {
            "$ref": "#/components/schemas/ExprImpl"
          },
          "item": {
            "$ref": "#/components/schemas/QualifiedItemName"
          },
          "name": {
            "type": "string"
          },
          "thresholds": {
            "default": {},
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ExprImpl"
            }
          },
          "unit": {
            "default": "",
            "allOf": [
              {
                "$ref": "#/components/schemas/Unit"
              }
            ]
          }
        }
      },
      "DashboardMetricId": {
        "type": "string"
      },
      "Deleted": {
        "title": "Deleted",
        "type": "string",
        "enum": [
          "deleted"
        ]
      },
      "Dimension": {
        "description": "Base dimensions. These can be considered a unit's \"type\". Conversion is possible only between units of the same dimension.",
        "type": "string",
        "enum": [
          "length",
          "mass",
          "time",
          "current",
          "temperature",
          "area",
          "volume",
          "speed",
          "acceleration",
          "potential",
          "power",
          "resistance",
          "conductivity",
          "absolute_humidity",
          "frequency",
          "time_square",
          "information",
          "operations",
          "bandwidth",
          "i_o_latency",
          "i_o_performance",
          "avg_op_size",
          "fan_speed",
          "dimensionless"
        ]
      },
      "Domain": {
        "type": "object",
        "required": [
          "types"
        ],
        "properties": {
          "roots": {
            "default": null,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemId"
            },
            "uniqueItems": true,
            "nullable": true
          },
          "types": {
            "$ref": "#/components/schemas/TypeSet"
          }
        }
      },
      "Done": {
        "title": "Done",
        "type": "string",
        "enum": [
          "done"
        ]
      },
      "DownloadMetrics": {
        "title": "DownloadMetrics",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Metric_for_Map_of_String_and_DataPoint2_for_Value"
        }
      },
      "DynamicTraceAlertRuleConfig": {
        "type": "object",
        "required": [
          "offset",
          "thresholds"
        ],
        "properties": {
          "offset": {
            "type": "number",
            "format": "double"
          },
          "thresholds": {
            "type": "object",
            "additionalProperties": {
              "type": "number",
              "format": "double"
            }
          }
        }
      },
      "DynamicTraceAlertRuleSpec": {
        "type": "object",
        "required": [
          "item",
          "long_term_interval",
          "metric",
          "short_term_interval"
        ],
        "properties": {
          "item": {
            "$ref": "#/components/schemas/TraceItem"
          },
          "long_term_interval": {
            "$ref": "#/components/schemas/ReferenceInterval"
          },
          "metric": {
            "$ref": "#/components/schemas/TraceMetric"
          },
          "short_term_interval": {
            "$ref": "#/components/schemas/ImmediateInterval"
          }
        }
      },
      "Elements": {
        "type": "object",
        "required": [
          "item_types",
          "relation_types"
        ],
        "properties": {
          "item_types": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relative_ItemTypeId"
            },
            "uniqueItems": true
          },
          "relation_types": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relative_RelationTypeId"
            },
            "uniqueItems": true
          }
        }
      },
      "Endpoint": {
        "type": "string",
        "enum": [
          "source",
          "target"
        ]
      },
      "EventType": {
        "type": "string",
        "enum": [
          "added",
          "modified",
          "removed"
        ]
      },
      "Event_for_DbItem": {
        "type": "object",
        "oneOf": [
          {
            "title": "item",
            "type": "object",
            "required": [
              "item_id",
              "item_name",
              "item_type",
              "parents",
              "type"
            ],
            "properties": {
              "item_id": {
                "$ref": "#/components/schemas/ItemId"
              },
              "item_name": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "item_type": {
                "$ref": "#/components/schemas/Absolute_ItemTypeId"
              },
              "parents": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ItemId"
                }
              },
              "type": {
                "type": "string",
                "enum": [
                  "item"
                ]
              }
            }
          },
          {
            "title": "relation",
            "type": "object",
            "required": [
              "relation_id",
              "relation_type",
              "source",
              "target",
              "type"
            ],
            "properties": {
              "relation_id": {
                "$ref": "#/components/schemas/RelationId"
              },
              "relation_type": {
                "$ref": "#/components/schemas/Absolute_RelationTypeId"
              },
              "source": {
                "$ref": "#/components/schemas/ItemInfo"
              },
              "target": {
                "$ref": "#/components/schemas/ItemInfo"
              },
              "type": {
                "type": "string",
                "enum": [
                  "relation"
                ]
              }
            }
          }
        ],
        "required": [
          "change_type",
          "object_id",
          "timestamp"
        ],
        "properties": {
          "change_type": {
            "$ref": "#/components/schemas/EventType"
          },
          "object_id": {
            "type": "string"
          },
          "parent": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ItemId"
              }
            ],
            "nullable": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Event_for_StatusDoc": {
        "type": "object",
        "oneOf": [
          {
            "title": "item",
            "type": "object",
            "required": [
              "item_id",
              "item_name",
              "item_type",
              "parents",
              "type"
            ],
            "properties": {
              "item_id": {
                "$ref": "#/components/schemas/ItemId"
              },
              "item_name": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "item_type": {
                "$ref": "#/components/schemas/Absolute_ItemTypeId"
              },
              "parents": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ItemId"
                }
              },
              "type": {
                "type": "string",
                "enum": [
                  "item"
                ]
              }
            }
          },
          {
            "title": "relation",
            "type": "object",
            "required": [
              "relation_id",
              "relation_type",
              "source",
              "target",
              "type"
            ],
            "properties": {
              "relation_id": {
                "$ref": "#/components/schemas/RelationId"
              },
              "relation_type": {
                "$ref": "#/components/schemas/Absolute_RelationTypeId"
              },
              "source": {
                "$ref": "#/components/schemas/ItemInfo"
              },
              "target": {
                "$ref": "#/components/schemas/ItemInfo"
              },
              "type": {
                "type": "string",
                "enum": [
                  "relation"
                ]
              }
            }
          }
        ],
        "required": [
          "change_type",
          "object_id",
          "timestamp"
        ],
        "properties": {
          "change_type": {
            "$ref": "#/components/schemas/EventType"
          },
          "object_id": {
            "type": "string"
          },
          "previous": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Status"
              }
            ],
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ExprImpl": {
        "type": "string"
      },
      "ExprName": {
        "type": "string"
      },
      "FixedTraceAlertRuleConfig": {
        "type": "object",
        "required": [
          "quantile",
          "thresholds"
        ],
        "properties": {
          "quantile": {
            "type": "string"
          },
          "thresholds": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "FixedTraceAlertRuleSpec": {
        "type": "object",
        "required": [
          "interval",
          "item",
          "metric",
          "param"
        ],
        "properties": {
          "interval": {
            "$ref": "#/components/schemas/ImmediateInterval"
          },
          "item": {
            "$ref": "#/components/schemas/TraceItem"
          },
          "metric": {
            "$ref": "#/components/schemas/TraceMetric"
          },
          "param": {
            "$ref": "#/components/schemas/TraceParameter"
          }
        }
      },
      "Follow": {
        "type": "object",
        "required": [
          "element",
          "relation"
        ],
        "properties": {
          "element": {
            "$ref": "#/components/schemas/QueryElemId"
          },
          "relation": {
            "$ref": "#/components/schemas/RelationSelector"
          }
        }
      },
      "FollowItem": {
        "type": "object",
        "required": [
          "item",
          "key"
        ],
        "properties": {
          "item": {
            "$ref": "#/components/schemas/ItemSelector"
          },
          "key": {
            "$ref": "#/components/schemas/ItemKeySelector"
          }
        }
      },
      "FollowParent": {
        "type": "object",
        "required": [
          "item",
          "key"
        ],
        "properties": {
          "item": {
            "$ref": "#/components/schemas/ItemSelector"
          },
          "key": {
            "$ref": "#/components/schemas/ItemKeySelector"
          }
        }
      },
      "FollowRelation": {
        "type": "object",
        "required": [
          "key",
          "relation"
        ],
        "properties": {
          "key": {
            "$ref": "#/components/schemas/RelationKeySelector"
          },
          "relation": {
            "$ref": "#/components/schemas/RelationSelector"
          }
        }
      },
      "GenInfo": {
        "title": "GenInfo",
        "type": "object",
        "required": [
          "hints",
          "query"
        ],
        "properties": {
          "hints": {
            "$ref": "#/components/schemas/Hints"
          },
          "query": {
            "$ref": "#/components/schemas/MetricSelector"
          }
        }
      },
      "GenerateTreeInfo": {
        "title": "GenerateTreeInfo",
        "oneOf": [
          {
            "title": "item",
            "type": "object",
            "required": [
              "choice",
              "collected",
              "errors",
              "items",
              "keys",
              "metrics",
              "name",
              "paths",
              "query",
              "split_by",
              "splittable",
              "type"
            ],
            "properties": {
              "choice": {
                "$ref": "#/components/schemas/Choice"
              },
              "collected": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CollectedInfo"
                }
              },
              "errors": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/QualifiedItemName"
                },
                "uniqueItems": true
              },
              "keys": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LabelName"
                },
                "uniqueItems": true
              },
              "metrics": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MetricName"
                },
                "uniqueItems": true
              },
              "name": {
                "$ref": "#/components/schemas/QualifiedItemName"
              },
              "paths": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "query": {
                "$ref": "#/components/schemas/MetricSelector"
              },
              "split_by": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LabelName"
                },
                "uniqueItems": true
              },
              "splittable": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LabelName"
                },
                "uniqueItems": true
              },
              "type": {
                "type": "string",
                "enum": [
                  "item"
                ]
              }
            }
          },
          {
            "title": "metric",
            "type": "object",
            "required": [
              "collected",
              "metric",
              "name",
              "paths",
              "type"
            ],
            "properties": {
              "collected": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CollectedInfo"
                }
              },
              "metric": {
                "$ref": "#/components/schemas/Metric"
              },
              "name": {
                "$ref": "#/components/schemas/MetricName"
              },
              "paths": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "type": {
                "type": "string",
                "enum": [
                  "metric"
                ]
              }
            }
          }
        ]
      },
      "GraphColor": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/PredefinedColor"
          },
          {
            "type": "string"
          }
        ]
      },
      "GraphEdgeSize": {
        "type": "number",
        "format": "double"
      },
      "GraphMetricColor": {
        "$ref": "#/components/schemas/GraphColor"
      },
      "GraphNodeSize": {
        "type": "number",
        "format": "double"
      },
      "Hints": {
        "type": "object",
        "properties": {
          "choose": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Choose"
            }
          },
          "rename": {
            "$ref": "#/components/schemas/Map_of_Set_of_MetricSelector"
          },
          "split_by": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SplitBy"
            }
          }
        }
      },
      "Histogram": {
        "type": "object",
        "properties": {
          "labels": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/MetricSelector"
              }
            ]
          },
          "query": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/MetricSelector"
              }
            ]
          },
          "unit": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ImmediateInterval": {
        "type": "string",
        "enum": [
          "5m",
          "15m"
        ]
      },
      "InfoQuery": {
        "type": "object",
        "properties": {
          "items": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/QueryItemInfo"
            }
          },
          "relations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/QueryRelationInfo"
            }
          }
        }
      },
      "InfoQueryBody": {
        "title": "InfoQueryBody",
        "type": "object",
        "required": [
          "params",
          "query"
        ],
        "properties": {
          "params": {
            "$ref": "#/components/schemas/InfoQueryParams"
          },
          "query": {
            "$ref": "#/components/schemas/InfoQuery"
          }
        }
      },
      "InfoQueryParams": {
        "type": "object",
        "required": [
          "from",
          "timestamp",
          "to"
        ],
        "properties": {
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "InstanceAction": {
        "type": "string",
        "enum": [
          "individual",
          "worst",
          "best"
        ]
      },
      "InstanceDashboard": {
        "type": "object",
        "required": [
          "panels"
        ],
        "properties": {
          "panels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Panel_for_InstanceWidget"
            }
          }
        }
      },
      "Interval": {
        "type": "string",
        "enum": [
          "second",
          "minute",
          "hour",
          "day",
          "week",
          "month",
          "quarter",
          "year"
        ]
      },
      "Item": {
        "type": "object",
        "properties": {
          "assert": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/MetricSelector"
              }
            ]
          },
          "fork": {
            "default": false,
            "type": "boolean"
          },
          "items": {
            "default": [],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemRef"
            },
            "uniqueItems": true
          },
          "keys": {
            "default": [],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelName"
            },
            "uniqueItems": true
          },
          "metrics": {
            "default": {},
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Metric"
            }
          },
          "query": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/MetricSelector"
              }
            ]
          }
        }
      },
      "ItemConnections": {
        "type": "object",
        "required": [
          "prometheus"
        ],
        "properties": {
          "prometheus": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ItemMetrics"
            }
          }
        }
      },
      "ItemId": {
        "type": "string",
        "format": "uuid"
      },
      "ItemIdSelector": {
        "oneOf": [
          {
            "title": "is",
            "type": "object",
            "required": [
              "is"
            ],
            "properties": {
              "is": {
                "$ref": "#/components/schemas/ItemId"
              }
            },
            "additionalProperties": false
          },
          {
            "title": "in",
            "type": "object",
            "required": [
              "in"
            ],
            "properties": {
              "in": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ItemId"
                },
                "uniqueItems": true
              }
            },
            "additionalProperties": false
          },
          {
            "title": "template",
            "type": "object",
            "required": [
              "template"
            ],
            "properties": {
              "template": {
                "$ref": "#/components/schemas/TplVarId"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "ItemInfo": {
        "title": "ItemInfo",
        "type": "object",
        "required": [
          "items",
          "keys",
          "metrics",
          "paths",
          "query"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QualifiedItemName"
            },
            "uniqueItems": true
          },
          "keys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelName"
            },
            "uniqueItems": true
          },
          "metrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetricName"
            },
            "uniqueItems": true
          },
          "paths": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "query": {
            "$ref": "#/components/schemas/MetricSelector"
          }
        }
      },
      "ItemKeySelector": {
        "oneOf": [
          {
            "title": "property",
            "type": "object",
            "required": [
              "property"
            ],
            "properties": {
              "property": {
                "$ref": "#/components/schemas/Relative_PropertyId"
              }
            },
            "additionalProperties": false
          },
          {
            "title": "parent",
            "type": "object",
            "required": [
              "parent"
            ],
            "properties": {
              "parent": {
                "$ref": "#/components/schemas/FollowParent"
              }
            },
            "additionalProperties": false
          },
          {
            "title": "relation",
            "type": "object",
            "required": [
              "relation"
            ],
            "properties": {
              "relation": {
                "$ref": "#/components/schemas/FollowRelation"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "ItemList": {
        "type": "object",
        "required": [
          "items",
          "keys"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Series"
            }
          },
          "keys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelName"
            },
            "uniqueItems": true
          }
        }
      },
      "ItemMetrics": {
        "type": "object",
        "required": [
          "keys"
        ],
        "properties": {
          "group_by": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelName"
            },
            "uniqueItems": true,
            "nullable": true
          },
          "keys": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ItemKeySelector"
            }
          }
        }
      },
      "ItemName": {
        "type": "string"
      },
      "ItemRef": {
        "type": "object",
        "required": [
          "item"
        ],
        "properties": {
          "item": {
            "$ref": "#/components/schemas/ItemName"
          },
          "module": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ModuleName"
              }
            ],
            "nullable": true
          }
        }
      },
      "ItemSelector": {
        "$ref": "#/components/schemas/Selector_for_MatchItem"
      },
      "ItemStyleRule": {
        "type": "object",
        "required": [
          "selector",
          "style"
        ],
        "properties": {
          "selector": {
            "$ref": "#/components/schemas/ItemSelector"
          },
          "style": {
            "$ref": "#/components/schemas/ItemStyleSetting"
          }
        }
      },
      "ItemStyleSetting": {
        "type": "object",
        "properties": {
          "icon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ByTheme_for_String"
              }
            ],
            "nullable": true
          },
          "label": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Absolute_PropertyId"
            },
            "nullable": true
          },
          "label_color": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ByTheme_for_GraphColor"
              }
            ],
            "nullable": true
          },
          "metric_badge": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MetricStyle_for_GraphMetricColor"
              }
            ],
            "nullable": true
          },
          "metric_size": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MetricStyle_for_GraphNodeSize"
              }
            ],
            "nullable": true
          }
        }
      },
      "ItemType": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "implements": {
            "default": [],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relative_ItemTypeId"
            },
            "uniqueItems": true
          },
          "keys": {
            "default": [],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relative_PropertyId"
            },
            "uniqueItems": true
          },
          "name": {
            "$ref": "#/components/schemas/ItemTypeName"
          },
          "name_template": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RelativeNameTemplate"
              }
            ],
            "nullable": true
          },
          "parents": {
            "default": [],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relative_ItemTypeId"
            },
            "uniqueItems": true
          },
          "properties": {
            "default": [],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relative_PropertyId"
            },
            "uniqueItems": true
          }
        }
      },
      "ItemTypeAlertBody": {
        "title": "ItemTypeAlertBody",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Absolute_ItemTypeId"
        }
      },
      "ItemTypeDefinition": {
        "type": "object",
        "required": [
          "dashboards",
          "metrics",
          "table"
        ],
        "properties": {
          "dashboards": {
            "$ref": "#/components/schemas/Dashboard"
          },
          "metrics": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/DashboardMetric"
            }
          },
          "table": {
            "$ref": "#/components/schemas/Table"
          },
          "topologies": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Topology"
            },
            "nullable": true
          }
        }
      },
      "ItemTypeId": {
        "type": "string"
      },
      "ItemTypeIds": {
        "title": "ItemTypeIds",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ItemTypeId"
        },
        "uniqueItems": true
      },
      "ItemTypeInfo": {
        "title": "ItemTypeInfo",
        "type": "object",
        "required": [
          "children",
          "implementors",
          "implements",
          "keys",
          "name",
          "parents",
          "prometheus_metrics",
          "properties",
          "source_of",
          "target_of"
        ],
        "properties": {
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relative_ItemTypeId"
            },
            "uniqueItems": true
          },
          "implementors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relative_ItemTypeId"
            },
            "uniqueItems": true
          },
          "implements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relative_ItemTypeId"
            },
            "uniqueItems": true
          },
          "keys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relative_PropertyId"
            },
            "uniqueItems": true
          },
          "name": {
            "$ref": "#/components/schemas/ItemTypeName"
          },
          "name_template": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RelativeNameTemplate"
              }
            ],
            "nullable": true
          },
          "parents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relative_ItemTypeId"
            },
            "uniqueItems": true
          },
          "prometheus_metrics": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/ItemMetrics"
              }
            }
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/PropertyType"
            }
          },
          "source_of": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relative_RelationTypeId"
            },
            "uniqueItems": true
          },
          "target_of": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relative_RelationTypeId"
            },
            "uniqueItems": true
          }
        }
      },
      "ItemTypeName": {
        "type": "object",
        "required": [
          "plural",
          "singular"
        ],
        "properties": {
          "plural": {
            "type": "string"
          },
          "singular": {
            "type": "string"
          }
        }
      },
      "ItemTypeSelector": {
        "oneOf": [
          {
            "title": "is",
            "type": "object",
            "required": [
              "is"
            ],
            "properties": {
              "is": {
                "$ref": "#/components/schemas/Relative_ItemTypeId"
              }
            },
            "additionalProperties": false
          },
          {
            "title": "in",
            "type": "object",
            "required": [
              "in"
            ],
            "properties": {
              "in": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Relative_ItemTypeId"
                },
                "uniqueItems": true
              }
            },
            "additionalProperties": false
          },
          {
            "title": "template",
            "type": "object",
            "required": [
              "template"
            ],
            "properties": {
              "template": {
                "$ref": "#/components/schemas/TplVarId"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "Items": {
        "title": "Items",
        "type": "object",
        "required": [
          "cols",
          "path",
          "rows"
        ],
        "properties": {
          "cols": {
            "type": "array",
            "items": {
              "type": "array",
              "items": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LabelName"
                  }
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          },
          "path": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ItemList"
            }
          },
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Series"
            }
          }
        }
      },
      "ItemsParams": {
        "title": "ItemsParams",
        "type": "object",
        "properties": {
          "filters": {
            "default": {},
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      },
      "Items_for_Augmented_for_Item_and_StatusInfo": {
        "title": "Items_for_Augmented_for_Item_and_StatusInfo",
        "type": "object",
        "properties": {
          "items": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Augmented_for_Item_and_StatusInfo"
            }
          },
          "relations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Augmented_for_Relation_and_StatusInfo"
            }
          }
        }
      },
      "Items_for_Item": {
        "type": "object",
        "properties": {
          "items": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Item"
            }
          },
          "relations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Relation"
            }
          }
        }
      },
      "LabelName": {
        "description": "Prometheus label name. Must match regex /[a-zA-Z_][a-zA-Z0-9_]*/.",
        "type": "string"
      },
      "LabelSelector": {
        "oneOf": [
          {
            "title": "opt",
            "description": "Label is optional. This selector can be used to accept any value for the label, while making sure it is matched by the schema.",
            "type": "string",
            "enum": [
              "opt"
            ]
          },
          {
            "title": "set",
            "description": "Match all non-empty values (label should be set).",
            "type": "string",
            "enum": [
              "set"
            ]
          },
          {
            "title": "unset",
            "description": "Match the empty value (Label should not be set).",
            "type": "string",
            "enum": [
              "unset"
            ]
          },
          {
            "title": "eq",
            "description": "Match a specific value.",
            "type": "object",
            "required": [
              "eq"
            ],
            "properties": {
              "eq": {
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          {
            "title": "ne",
            "description": "Exclude a specific value.",
            "type": "object",
            "required": [
              "ne"
            ],
            "properties": {
              "ne": {
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          {
            "title": "in",
            "description": "Match a set of values.",
            "type": "object",
            "required": [
              "in"
            ],
            "properties": {
              "in": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            },
            "additionalProperties": false
          },
          {
            "title": "not_in",
            "description": "Exclude a set of values.",
            "type": "object",
            "required": [
              "not_in"
            ],
            "properties": {
              "not_in": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "LoadMetricsInfo": {
        "title": "LoadMetricsInfo",
        "type": "object",
        "required": [
          "cached",
          "info"
        ],
        "properties": {
          "cached": {
            "type": "boolean"
          },
          "info": {
            "$ref": "#/components/schemas/LoadedMetricsInfo"
          }
        }
      },
      "LoadMetricsParams": {
        "title": "LoadMetricsParams",
        "type": "object",
        "required": [
          "query"
        ],
        "properties": {
          "force": {
            "default": false,
            "type": "boolean"
          },
          "query": {
            "$ref": "#/components/schemas/MetricSelector"
          }
        }
      },
      "LoadedMetricsInfo": {
        "type": "object",
        "required": [
          "common_by_presence",
          "common_by_value",
          "nseries",
          "query",
          "time"
        ],
        "properties": {
          "common_by_presence": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelName"
            },
            "uniqueItems": true
          },
          "common_by_value": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "nseries": {
            "type": "integer",
            "format": "uint",
            "minimum": 0.0
          },
          "query": {
            "$ref": "#/components/schemas/MetricSelector"
          },
          "time": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Map_of_Set_of_MetricSelector": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/MetricSelector"
          },
          "uniqueItems": true
        }
      },
      "Metric": {
        "oneOf": [
          {
            "title": "scalar",
            "type": "object",
            "required": [
              "scalar"
            ],
            "properties": {
              "scalar": {
                "$ref": "#/components/schemas/Scalar"
              }
            },
            "additionalProperties": false
          },
          {
            "title": "histogram",
            "type": "object",
            "required": [
              "histogram"
            ],
            "properties": {
              "histogram": {
                "$ref": "#/components/schemas/Histogram"
              }
            },
            "additionalProperties": false
          },
          {
            "title": "summary",
            "type": "object",
            "required": [
              "summary"
            ],
            "properties": {
              "summary": {
                "$ref": "#/components/schemas/Summary"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "MetricBound": {
        "oneOf": [
          {
            "title": "auto",
            "type": "string",
            "enum": [
              "auto"
            ]
          },
          {
            "title": "fixed",
            "type": "object",
            "required": [
              "fixed"
            ],
            "properties": {
              "fixed": {
                "type": "number",
                "format": "double"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "MetricData": {
        "type": "object",
        "required": [
          "labels",
          "value"
        ],
        "properties": {
          "labels": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "MetricName": {
        "description": "A valid prometheus metric name. Must match regex /[a-zA-Z_:][a-zA-Z0-9_:]*/.",
        "type": "string"
      },
      "MetricRange": {
        "type": "object",
        "required": [
          "max",
          "min",
          "scale"
        ],
        "properties": {
          "max": {
            "$ref": "#/components/schemas/MetricBound"
          },
          "min": {
            "$ref": "#/components/schemas/MetricBound"
          },
          "scale": {
            "$ref": "#/components/schemas/MetricRangeScale"
          }
        }
      },
      "MetricRangeScale": {
        "oneOf": [
          {
            "title": "linear",
            "type": "string",
            "enum": [
              "linear"
            ]
          },
          {
            "title": "logarithmic",
            "type": "object",
            "required": [
              "logarithmic"
            ],
            "properties": {
              "logarithmic": {
                "type": "object",
                "required": [
                  "base"
                ],
                "properties": {
                  "base": {
                    "type": "number",
                    "format": "double"
                  }
                }
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "MetricSelector": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/LabelSelector"
        }
      },
      "MetricStyle_for_GraphEdgeSize": {
        "type": "object",
        "required": [
          "expr_name",
          "name"
        ],
        "properties": {
          "default_enabled": {
            "default": false,
            "type": "boolean"
          },
          "expr_name": {
            "$ref": "#/components/schemas/ExprName"
          },
          "metric_range": {
            "default": {
              "max": "auto",
              "min": "auto",
              "scale": "linear"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/MetricRange"
              }
            ]
          },
          "name": {
            "type": "string"
          },
          "style_range": {
            "$ref": "#/components/schemas/StyleRange_for_GraphEdgeSize"
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MetricStyle_for_GraphMetricColor": {
        "type": "object",
        "required": [
          "expr_name",
          "name"
        ],
        "properties": {
          "default_enabled": {
            "default": false,
            "type": "boolean"
          },
          "expr_name": {
            "$ref": "#/components/schemas/ExprName"
          },
          "metric_range": {
            "default": {
              "max": "auto",
              "min": "auto",
              "scale": "linear"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/MetricRange"
              }
            ]
          },
          "name": {
            "type": "string"
          },
          "style_range": {
            "$ref": "#/components/schemas/StyleRange_for_GraphMetricColor"
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MetricStyle_for_GraphNodeSize": {
        "type": "object",
        "required": [
          "expr_name",
          "name"
        ],
        "properties": {
          "default_enabled": {
            "default": false,
            "type": "boolean"
          },
          "expr_name": {
            "$ref": "#/components/schemas/ExprName"
          },
          "metric_range": {
            "default": {
              "max": "auto",
              "min": "auto",
              "scale": "linear"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/MetricRange"
              }
            ]
          },
          "name": {
            "type": "string"
          },
          "style_range": {
            "$ref": "#/components/schemas/StyleRange_for_GraphNodeSize"
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Metric_for_Map_of_String_and_DataPoint2_for_Value": {
        "description": "A metric value or series as returned by prometheus.",
        "type": "object",
        "required": [
          "metric",
          "timestamp",
          "value"
        ],
        "properties": {
          "metric": {
            "description": "The label map identifying the metric.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "value": {
            "$ref": "#/components/schemas/Value"
          }
        }
      },
      "MetricsData": {
        "title": "MetricsData",
        "type": "object",
        "required": [
          "cols",
          "errors",
          "rows"
        ],
        "properties": {
          "cols": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelName"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetricData"
            }
          }
        }
      },
      "MetricsParams": {
        "title": "MetricsParams",
        "type": "object",
        "required": [
          "item"
        ],
        "properties": {
          "item": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "ModInfo": {
        "title": "ModInfo",
        "type": "object",
        "required": [
          "items",
          "requires"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemName"
            }
          },
          "requires": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ModuleVersionReq"
            }
          }
        }
      },
      "Module": {
        "title": "Module",
        "type": "object",
        "required": [
          "version"
        ],
        "properties": {
          "items": {
            "default": {},
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Item"
            }
          },
          "requires": {
            "default": {},
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ModuleVersionReq"
            }
          },
          "version": {
            "$ref": "#/components/schemas/ModuleVersion"
          }
        }
      },
      "ModuleInfo": {
        "title": "ModuleInfo",
        "type": "object",
        "required": [
          "hints"
        ],
        "properties": {
          "hints": {
            "$ref": "#/components/schemas/Hints"
          },
          "metrics": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LoadedMetricsInfo"
              }
            ],
            "nullable": true
          },
          "schema": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SchemaInfo"
              }
            ],
            "nullable": true
          }
        }
      },
      "ModuleList": {
        "title": "ModuleList",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ModuleName"
        },
        "uniqueItems": true
      },
      "ModuleName": {
        "type": "string"
      },
      "ModuleVersion": {
        "type": "string"
      },
      "ModuleVersionReq": {
        "type": "string"
      },
      "Modules": {
        "title": "Modules",
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/ModuleVersion"
        }
      },
      "Multiplicity": {
        "type": "string",
        "enum": [
          "one-to-one",
          "one-to-many"
        ]
      },
      "Node": {
        "type": "object",
        "required": [
          "children",
          "id",
          "label"
        ],
        "properties": {
          "children": {
            "$ref": "#/components/schemas/Tree"
          },
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        }
      },
      "Package": {
        "title": "Package",
        "type": "object",
        "required": [
          "version"
        ],
        "properties": {
          "items": {
            "default": {},
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ItemType"
            }
          },
          "properties": {
            "default": {},
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/PropertyType"
            }
          },
          "relations": {
            "default": {},
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/RelationType"
            }
          },
          "requires": {
            "default": {},
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/PackageVersionReq"
            }
          },
          "version": {
            "$ref": "#/components/schemas/PackageVersion"
          }
        }
      },
      "PackageData": {
        "title": "PackageData",
        "type": "object",
        "required": [
          "packages"
        ],
        "properties": {
          "connections": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ConnectionsPackages"
              }
            ],
            "nullable": true
          },
          "packages": {
            "$ref": "#/components/schemas/Packages"
          },
          "prom_schema": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PromSchemaData"
              }
            ],
            "nullable": true
          }
        }
      },
      "PackageId": {
        "type": "string"
      },
      "PackageInfo": {
        "title": "PackageInfo",
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/PackageVersion"
        }
      },
      "PackageVersion": {
        "type": "string"
      },
      "PackageVersionReq": {
        "type": "string"
      },
      "Packages": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/Package"
        }
      },
      "Panel_for_InstanceWidget": {
        "type": "object",
        "required": [
          "name",
          "widgets"
        ],
        "properties": {
          "documentation": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "widgets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Widget_for_InstanceWidget"
            }
          }
        }
      },
      "Panel_for_TypeRangeWidget": {
        "type": "object",
        "required": [
          "name",
          "widgets"
        ],
        "properties": {
          "documentation": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "widgets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Widget_for_TypeRangeWidget"
            }
          }
        }
      },
      "ParamKind": {
        "type": "string",
        "enum": [
          "param",
          "threshold"
        ]
      },
      "ParamSpec": {
        "type": "object",
        "required": [
          "kind",
          "type"
        ],
        "properties": {
          "kind": {
            "$ref": "#/components/schemas/ParamKind"
          },
          "type": {
            "$ref": "#/components/schemas/ParamTypeSpec"
          }
        }
      },
      "ParamTypeSpec": {
        "oneOf": [
          {
            "title": "int",
            "type": "object",
            "required": [
              "int"
            ],
            "properties": {
              "int": {
                "type": "object"
              }
            },
            "additionalProperties": false
          },
          {
            "title": "quantity",
            "type": "object",
            "required": [
              "quantity"
            ],
            "properties": {
              "quantity": {
                "type": "object",
                "required": [
                  "dimension"
                ],
                "properties": {
                  "decimals": {
                    "type": "integer",
                    "format": "uint8",
                    "minimum": 0.0,
                    "nullable": true
                  },
                  "dimension": {
                    "$ref": "#/components/schemas/Dimension"
                  },
                  "units": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Unit"
                    },
                    "nullable": true
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "title": "prom_duration",
            "type": "object",
            "required": [
              "prom_duration"
            ],
            "properties": {
              "prom_duration": {
                "type": "object"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "ParamValue": {
        "anyOf": [
          {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          {
            "type": "number",
            "format": "double"
          },
          {
            "$ref": "#/components/schemas/Quantity"
          },
          {
            "$ref": "#/components/schemas/PromDuration"
          }
        ]
      },
      "ParamValues": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/ParamValue"
        }
      },
      "PredefinedColor": {
        "type": "string",
        "enum": [
          "white",
          "black",
          "green",
          "red",
          "gray",
          "yellow",
          "orange",
          "blue"
        ]
      },
      "PromDuration": {
        "type": "string"
      },
      "PromItemList": {
        "title": "PromItemList",
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/ItemName"
          },
          "uniqueItems": true
        }
      },
      "PromSchemaData": {
        "type": "object",
        "required": [
          "modules",
          "root"
        ],
        "properties": {
          "modules": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Module"
            }
          },
          "root": {
            "$ref": "#/components/schemas/Root"
          }
        }
      },
      "PropertyId": {
        "type": "string"
      },
      "PropertySelector": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/ValueSelector"
        }
      },
      "PropertyType": {
        "title": "PropertyType",
        "type": "object",
        "required": [
          "name",
          "value"
        ],
        "properties": {
          "description": {
            "default": null,
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "value": {}
        }
      },
      "PropertyValue": {
        "oneOf": [
          {
            "title": "string",
            "type": "object",
            "required": [
              "string"
            ],
            "properties": {
              "string": {
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          {
            "title": "integer",
            "type": "object",
            "required": [
              "integer"
            ],
            "properties": {
              "integer": {
                "type": "integer",
                "format": "int64"
              }
            },
            "additionalProperties": false
          },
          {
            "title": "float",
            "type": "object",
            "required": [
              "float"
            ],
            "properties": {
              "float": {
                "type": "number",
                "format": "double"
              }
            },
            "additionalProperties": false
          },
          {
            "title": "time",
            "type": "object",
            "required": [
              "time"
            ],
            "properties": {
              "time": {
                "type": "string",
                "format": "date-time"
              }
            },
            "additionalProperties": false
          },
          {
            "title": "map",
            "type": "object",
            "required": [
              "map"
            ],
            "properties": {
              "map": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/PropertyValue"
                }
              }
            },
            "additionalProperties": false
          },
          {
            "title": "list",
            "type": "object",
            "required": [
              "list"
            ],
            "properties": {
              "list": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PropertyValue"
                }
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "PutAlertRuleForm": {
        "title": "PutAlertRuleForm",
        "type": "object",
        "required": [
          "rule_form"
        ],
        "properties": {
          "rule_form": {
            "$ref": "#/components/schemas/UnverifiedAlertRuleForms"
          },
          "version": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "QualifiedItemName": {
        "type": "string"
      },
      "Quantity": {
        "type": "object",
        "required": [
          "unit",
          "value"
        ],
        "properties": {
          "unit": {
            "$ref": "#/components/schemas/Unit"
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "Query": {
        "type": "object",
        "required": [
          "elements",
          "root"
        ],
        "properties": {
          "elements": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/QueryElem"
            }
          },
          "filters": {
            "type": "object",
            "additionalProperties": true
          },
          "root": {
            "$ref": "#/components/schemas/QueryElemId"
          },
          "template": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/TplVarDef"
            }
          }
        }
      },
      "QueryElem": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "follow": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Follow"
            }
          },
          "items": {
            "$ref": "#/components/schemas/ItemSelector"
          }
        }
      },
      "QueryElemId": {
        "type": "string"
      },
      "QueryItemInfo": {
        "type": "object",
        "properties": {
          "metrics": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/QueryPromInfo_for_ItemKeySelector"
            }
          }
        }
      },
      "QueryMetric": {
        "type": "object",
        "required": [
          "expr",
          "item"
        ],
        "properties": {
          "expr": {
            "$ref": "#/components/schemas/ExprImpl"
          },
          "item": {
            "$ref": "#/components/schemas/QualifiedItemName"
          },
          "select": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SelectItem"
              }
            ],
            "nullable": true
          },
          "thresholds": {
            "default": {},
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ExprImpl"
            }
          }
        }
      },
      "QueryParams_for_InstantQueryParams": {
        "title": "QueryParams_for_InstantQueryParams",
        "type": "object",
        "required": [
          "expr",
          "item"
        ],
        "properties": {
          "expr": {
            "$ref": "#/components/schemas/ExprImpl"
          },
          "item": {
            "$ref": "#/components/schemas/QualifiedItemName"
          },
          "item_keys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelName"
            },
            "uniqueItems": true,
            "nullable": true
          },
          "item_query": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "select": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SelectItem"
              }
            ],
            "nullable": true
          },
          "source": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SourceId"
              }
            ],
            "nullable": true
          },
          "thresholds": {
            "default": {},
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ExprImpl"
            }
          },
          "time": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "QueryParams_for_RangeQueryParams": {
        "title": "QueryParams_for_RangeQueryParams",
        "type": "object",
        "required": [
          "end",
          "expr",
          "item",
          "start",
          "step"
        ],
        "properties": {
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "expr": {
            "$ref": "#/components/schemas/ExprImpl"
          },
          "item": {
            "$ref": "#/components/schemas/QualifiedItemName"
          },
          "item_keys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelName"
            },
            "uniqueItems": true,
            "nullable": true
          },
          "item_query": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "select": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SelectItem"
              }
            ],
            "nullable": true
          },
          "source": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SourceId"
              }
            ],
            "nullable": true
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "step": {
            "type": "number",
            "format": "double"
          },
          "thresholds": {
            "default": {},
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ExprImpl"
            }
          }
        }
      },
      "QueryPromInfo_for_ItemKeySelector": {
        "type": "object",
        "required": [
          "expr",
          "item",
          "labels"
        ],
        "properties": {
          "expr": {
            "$ref": "#/components/schemas/ExprImpl"
          },
          "item": {
            "$ref": "#/components/schemas/QualifiedItemName"
          },
          "labels": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ItemKeySelector"
            }
          }
        }
      },
      "QueryPromInfo_for_RelationKeySelector": {
        "type": "object",
        "required": [
          "expr",
          "item",
          "labels"
        ],
        "properties": {
          "expr": {
            "$ref": "#/components/schemas/ExprImpl"
          },
          "item": {
            "$ref": "#/components/schemas/QualifiedItemName"
          },
          "labels": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/RelationKeySelector"
            }
          }
        }
      },
      "QueryRawParams_for_RangeQueryParams": {
        "title": "QueryRawParams_for_RangeQueryParams",
        "type": "object",
        "required": [
          "end",
          "query",
          "start",
          "step"
        ],
        "properties": {
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "query": {
            "type": "string"
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "step": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "QueryRelationInfo": {
        "type": "object",
        "properties": {
          "metrics": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/QueryPromInfo_for_RelationKeySelector"
            }
          }
        }
      },
      "ReferenceInterval": {
        "type": "string",
        "enum": [
          "7d",
          "30d"
        ]
      },
      "Relation": {
        "type": "object",
        "required": [
          "relation_type",
          "source",
          "target"
        ],
        "properties": {
          "properties": {
            "default": {},
            "type": "object",
            "additionalProperties": true
          },
          "relation_type": {
            "$ref": "#/components/schemas/Relative_RelationTypeId"
          },
          "source": {
            "$ref": "#/components/schemas/ItemId"
          },
          "target": {
            "$ref": "#/components/schemas/ItemId"
          }
        }
      },
      "RelationConnections": {
        "type": "object",
        "required": [
          "prometheus"
        ],
        "properties": {
          "prometheus": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/RelationMetrics"
            }
          }
        }
      },
      "RelationId": {
        "type": "string",
        "format": "uuid"
      },
      "RelationIdSelector": {
        "oneOf": [
          {
            "title": "is",
            "type": "object",
            "required": [
              "is"
            ],
            "properties": {
              "is": {
                "$ref": "#/components/schemas/RelationId"
              }
            },
            "additionalProperties": false
          },
          {
            "title": "in",
            "type": "object",
            "required": [
              "in"
            ],
            "properties": {
              "in": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RelationId"
                },
                "uniqueItems": true
              }
            },
            "additionalProperties": false
          },
          {
            "title": "template",
            "type": "object",
            "required": [
              "template"
            ],
            "properties": {
              "template": {
                "$ref": "#/components/schemas/TplVarId"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "RelationKeySelector": {
        "oneOf": [
          {
            "title": "property",
            "type": "object",
            "required": [
              "property"
            ],
            "properties": {
              "property": {
                "$ref": "#/components/schemas/Relative_PropertyId"
              }
            },
            "additionalProperties": false
          },
          {
            "title": "source",
            "type": "object",
            "required": [
              "source"
            ],
            "properties": {
              "source": {
                "$ref": "#/components/schemas/FollowItem"
              }
            },
            "additionalProperties": false
          },
          {
            "title": "target",
            "type": "object",
            "required": [
              "target"
            ],
            "properties": {
              "target": {
                "$ref": "#/components/schemas/FollowItem"
              }
            },
            "additionalProperties": false
          },
          {
            "title": "item",
            "type": "object",
            "required": [
              "item"
            ],
            "properties": {
              "item": {
                "$ref": "#/components/schemas/FollowItem"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "RelationMetrics": {
        "type": "object",
        "required": [
          "keys"
        ],
        "properties": {
          "keys": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/RelationKeySelector"
            }
          }
        }
      },
      "RelationSelector": {
        "$ref": "#/components/schemas/Selector_for_MatchRelation"
      },
      "RelationStyleRule": {
        "type": "object",
        "required": [
          "selector",
          "style"
        ],
        "properties": {
          "selector": {
            "$ref": "#/components/schemas/RelationSelector"
          },
          "style": {
            "$ref": "#/components/schemas/RelationStyleSetting"
          }
        }
      },
      "RelationStyleSetting": {
        "type": "object",
        "properties": {
          "metric_color": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MetricStyle_for_GraphMetricColor"
              }
            ],
            "nullable": true
          },
          "metric_label": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MetricStyle_for_GraphMetricColor"
              }
            ],
            "nullable": true
          },
          "metric_size": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MetricStyle_for_GraphEdgeSize"
              }
            ],
            "nullable": true
          }
        }
      },
      "RelationType": {
        "type": "object",
        "required": [
          "multiplicity",
          "name",
          "source",
          "target"
        ],
        "properties": {
          "bidirectional": {
            "default": false,
            "type": "boolean"
          },
          "connector": {
            "default": null,
            "allOf": [
              {
                "$ref": "#/components/schemas/Connector"
              }
            ],
            "nullable": true
          },
          "description": {
            "default": null,
            "type": "string",
            "nullable": true
          },
          "multiplicity": {
            "$ref": "#/components/schemas/Multiplicity"
          },
          "name": {
            "type": "string"
          },
          "properties": {
            "default": [],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relative_PropertyId"
            },
            "uniqueItems": true
          },
          "source": {
            "$ref": "#/components/schemas/Relative_ItemTypeId"
          },
          "target": {
            "$ref": "#/components/schemas/Relative_ItemTypeId"
          }
        }
      },
      "RelationTypeId": {
        "type": "string"
      },
      "RelationTypeIds": {
        "title": "RelationTypeIds",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/RelationTypeId"
        },
        "uniqueItems": true
      },
      "RelationTypeInfo": {
        "title": "RelationTypeInfo",
        "type": "object",
        "required": [
          "bidirectional",
          "multiplicity",
          "name",
          "prometheus_metrics",
          "properties",
          "source",
          "target"
        ],
        "properties": {
          "bidirectional": {
            "type": "boolean"
          },
          "connector": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Connector"
              }
            ],
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "multiplicity": {
            "$ref": "#/components/schemas/Multiplicity"
          },
          "name": {
            "type": "string"
          },
          "prometheus_metrics": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/RelationMetrics"
              }
            }
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/PropertyType"
            }
          },
          "source": {
            "$ref": "#/components/schemas/Relative_ItemTypeId"
          },
          "target": {
            "$ref": "#/components/schemas/Relative_ItemTypeId"
          }
        }
      },
      "RelationTypeSelector": {
        "oneOf": [
          {
            "title": "is",
            "type": "object",
            "required": [
              "is"
            ],
            "properties": {
              "is": {
                "$ref": "#/components/schemas/Relative_RelationTypeId"
              }
            },
            "additionalProperties": false
          },
          {
            "title": "in",
            "type": "object",
            "required": [
              "in"
            ],
            "properties": {
              "in": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Relative_RelationTypeId"
                },
                "uniqueItems": true
              }
            },
            "additionalProperties": false
          },
          {
            "title": "template",
            "type": "object",
            "required": [
              "template"
            ],
            "properties": {
              "template": {
                "$ref": "#/components/schemas/TplVarId"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "RelativeNameTemplate": {
        "type": "string"
      },
      "Relative_ItemTypeId": {
        "type": "string"
      },
      "Relative_PropertyId": {
        "type": "string"
      },
      "Relative_RelationTypeId": {
        "type": "string"
      },
      "RenameItemParams": {
        "title": "RenameItemParams",
        "type": "object",
        "required": [
          "to"
        ],
        "properties": {
          "to": {
            "$ref": "#/components/schemas/ItemName"
          }
        }
      },
      "RenameModuleParams": {
        "title": "RenameModuleParams",
        "type": "object",
        "required": [
          "to"
        ],
        "properties": {
          "to": {
            "$ref": "#/components/schemas/ModuleName"
          }
        }
      },
      "Renamed": {
        "title": "Renamed",
        "type": "string",
        "enum": [
          "renamed"
        ]
      },
      "Root": {
        "type": "object",
        "properties": {
          "items": {
            "default": {},
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Item"
            }
          },
          "requires": {
            "default": {},
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ModuleVersionReq"
            }
          },
          "root": {
            "default": "root",
            "allOf": [
              {
                "$ref": "#/components/schemas/ItemRef"
              }
            ]
          }
        }
      },
      "Scalar": {
        "type": "object",
        "properties": {
          "labels": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/MetricSelector"
              }
            ]
          },
          "query": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/MetricSelector"
              }
            ]
          },
          "type": {
            "default": null,
            "allOf": [
              {
                "$ref": "#/components/schemas/ScalarType"
              }
            ],
            "nullable": true
          },
          "unit": {
            "default": null,
            "type": "string",
            "nullable": true
          }
        }
      },
      "ScalarType": {
        "type": "string",
        "enum": [
          "counter",
          "gauge"
        ]
      },
      "SchemaInfo": {
        "type": "object",
        "required": [
          "nitems",
          "root"
        ],
        "properties": {
          "nitems": {
            "type": "integer",
            "format": "uint",
            "minimum": 0.0
          },
          "root": {
            "$ref": "#/components/schemas/ItemName"
          }
        }
      },
      "SelectItem": {
        "oneOf": [
          {
            "title": "top",
            "type": "object",
            "required": [
              "top"
            ],
            "properties": {
              "top": {
                "type": "object",
                "required": [
                  "n"
                ],
                "properties": {
                  "n": {
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0.0
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "title": "bottom",
            "type": "object",
            "required": [
              "bottom"
            ],
            "properties": {
              "bottom": {
                "type": "object",
                "required": [
                  "n"
                ],
                "properties": {
                  "n": {
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0.0
                  }
                }
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "SelectorCtx": {
        "title": "SelectorCtx",
        "oneOf": [
          {
            "title": "item",
            "type": "object",
            "required": [
              "item"
            ],
            "properties": {
              "item": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Absolute_ItemTypeId"
                },
                "uniqueItems": true,
                "nullable": true
              }
            },
            "additionalProperties": false
          },
          {
            "title": "relation",
            "type": "object",
            "required": [
              "relation"
            ],
            "properties": {
              "relation": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Absolute_RelationTypeId"
                },
                "uniqueItems": true,
                "nullable": true
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "SelectorCtxInfo": {
        "title": "SelectorCtxInfo",
        "type": "object",
        "required": [
          "items",
          "parents",
          "properties",
          "relations",
          "sources",
          "targets"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Absolute_ItemTypeId"
            },
            "uniqueItems": true
          },
          "parents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Absolute_ItemTypeId"
            },
            "uniqueItems": true
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Absolute_PropertyId"
            },
            "uniqueItems": true
          },
          "relations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Absolute_RelationTypeId"
            },
            "uniqueItems": true
          },
          "sources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Absolute_ItemTypeId"
            },
            "uniqueItems": true
          },
          "targets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Absolute_ItemTypeId"
            },
            "uniqueItems": true
          }
        }
      },
      "Selector_for_MatchItem": {
        "type": "object",
        "properties": {
          "item_id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ItemIdSelector"
              }
            ],
            "nullable": true
          },
          "item_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ItemTypeSelector"
              }
            ],
            "nullable": true
          },
          "parent": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ItemSelector"
              }
            ],
            "nullable": true
          },
          "properties": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PropertySelector"
              }
            ],
            "nullable": true
          },
          "relations": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RelationSelector"
              }
            ],
            "nullable": true
          }
        }
      },
      "Selector_for_MatchRelation": {
        "type": "object",
        "properties": {
          "endpoint": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Endpoint"
              }
            ],
            "nullable": true
          },
          "item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ItemSelector"
              }
            ],
            "nullable": true
          },
          "properties": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PropertySelector"
              }
            ],
            "nullable": true
          },
          "relation_id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RelationIdSelector"
              }
            ],
            "nullable": true
          },
          "relation_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RelationTypeSelector"
              }
            ],
            "nullable": true
          }
        }
      },
      "Series": {
        "type": "object",
        "required": [
          "count",
          "keys"
        ],
        "properties": {
          "count": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "keys": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "Severity": {
        "type": "string",
        "enum": [
          "minor",
          "warning",
          "major",
          "critical"
        ]
      },
      "SingleVersionInfo": {
        "type": "object",
        "required": [
          "active"
        ],
        "properties": {
          "active": {
            "$ref": "#/components/schemas/Anchor"
          }
        }
      },
      "SourceId": {
        "type": "string"
      },
      "SplitBy": {
        "type": "object",
        "required": [
          "label"
        ],
        "properties": {
          "label": {
            "$ref": "#/components/schemas/LabelName"
          },
          "query": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/MetricSelector"
              }
            ]
          }
        }
      },
      "SplitByParams": {
        "title": "SplitByParams",
        "type": "object",
        "required": [
          "label"
        ],
        "properties": {
          "label": {
            "$ref": "#/components/schemas/LabelName"
          }
        }
      },
      "SplitByQueryParams": {
        "title": "SplitByQueryParams",
        "type": "object",
        "required": [
          "label",
          "query"
        ],
        "properties": {
          "label": {
            "$ref": "#/components/schemas/LabelName"
          },
          "query": {
            "$ref": "#/components/schemas/MetricSelector"
          }
        }
      },
      "Status": {
        "oneOf": [
          {
            "title": "Ok",
            "type": "string",
            "enum": [
              "Ok"
            ]
          },
          {
            "title": "Nok",
            "type": "object",
            "required": [
              "Nok"
            ],
            "properties": {
              "Nok": {
                "$ref": "#/components/schemas/Severity"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "StatusChange": {
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "previous": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Status"
              }
            ],
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          }
        }
      },
      "StatusInfo": {
        "type": "object",
        "required": [
          "alerts"
        ],
        "properties": {
          "aggregated_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Status"
              }
            ],
            "nullable": true
          },
          "alerts": {
            "type": "integer",
            "format": "uint",
            "minimum": 0.0
          },
          "individual_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Versioned_for_SingleVersionInfo_and_StatusChange"
              }
            ],
            "nullable": true
          }
        }
      },
      "StringSelector": {
        "oneOf": [
          {
            "title": "equals",
            "type": "object",
            "required": [
              "equals"
            ],
            "properties": {
              "equals": {
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          {
            "title": "in",
            "type": "object",
            "required": [
              "in"
            ],
            "properties": {
              "in": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            },
            "additionalProperties": false
          },
          {
            "title": "template",
            "type": "object",
            "required": [
              "template"
            ],
            "properties": {
              "template": {
                "$ref": "#/components/schemas/TplVarId"
              }
            },
            "additionalProperties": false
          },
          {
            "title": "not",
            "type": "object",
            "required": [
              "not"
            ],
            "properties": {
              "not": {
                "$ref": "#/components/schemas/StringSelector"
              }
            },
            "additionalProperties": false
          },
          {
            "title": "all",
            "type": "object",
            "required": [
              "all"
            ],
            "properties": {
              "all": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StringSelector"
                }
              }
            },
            "additionalProperties": false
          },
          {
            "title": "any",
            "type": "object",
            "required": [
              "any"
            ],
            "properties": {
              "any": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StringSelector"
                }
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "StyleRange_for_GraphEdgeSize": {
        "type": "object",
        "required": [
          "interpolate",
          "range"
        ],
        "properties": {
          "default": {
            "$ref": "#/components/schemas/GraphEdgeSize"
          },
          "interpolate": {
            "type": "boolean"
          },
          "range": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GraphEdgeSize"
            }
          }
        }
      },
      "StyleRange_for_GraphMetricColor": {
        "type": "object",
        "required": [
          "interpolate",
          "range"
        ],
        "properties": {
          "default": {
            "$ref": "#/components/schemas/GraphMetricColor"
          },
          "interpolate": {
            "type": "boolean"
          },
          "range": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GraphMetricColor"
            }
          }
        }
      },
      "StyleRange_for_GraphNodeSize": {
        "type": "object",
        "required": [
          "interpolate",
          "range"
        ],
        "properties": {
          "default": {
            "$ref": "#/components/schemas/GraphNodeSize"
          },
          "interpolate": {
            "type": "boolean"
          },
          "range": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GraphNodeSize"
            }
          }
        }
      },
      "Stylesheet": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemStyleRule"
            }
          },
          "relations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationStyleRule"
            }
          }
        }
      },
      "Summary": {
        "type": "object",
        "properties": {
          "labels": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/MetricSelector"
              }
            ]
          },
          "query": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/MetricSelector"
              }
            ]
          },
          "unit": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Table": {
        "type": "object",
        "properties": {
          "column_order": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TableColumn"
            },
            "nullable": true
          },
          "column_visibility": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TableColumn"
            },
            "nullable": true
          }
        }
      },
      "TableColumn": {
        "oneOf": [
          {
            "title": "property",
            "type": "object",
            "required": [
              "property"
            ],
            "properties": {
              "property": {
                "$ref": "#/components/schemas/Relative_PropertyId"
              }
            },
            "additionalProperties": false
          },
          {
            "title": "metric",
            "type": "object",
            "required": [
              "metric"
            ],
            "properties": {
              "metric": {
                "$ref": "#/components/schemas/DashboardMetricId"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "Topology": {
        "type": "object",
        "required": [
          "query",
          "queryFilters",
          "stylesheet"
        ],
        "properties": {
          "infoQuery": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InfoQuery"
              }
            ],
            "nullable": true
          },
          "query": {
            "$ref": "#/components/schemas/Query"
          },
          "queryFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TopologyQueryFilter"
            }
          },
          "stylesheet": {
            "$ref": "#/components/schemas/Stylesheet"
          }
        }
      },
      "TopologyFilterType": {
        "oneOf": [
          {
            "title": "autocomplete",
            "type": "object",
            "required": [
              "multipleSelection",
              "type"
            ],
            "properties": {
              "multipleSelection": {
                "type": "boolean"
              },
              "type": {
                "type": "string",
                "enum": [
                  "autocomplete"
                ]
              }
            }
          }
        ]
      },
      "TopologyId": {
        "type": "string"
      },
      "TopologyQueryFilter": {
        "type": "object",
        "required": [
          "filter",
          "label",
          "name"
        ],
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/TopologyFilterType"
          },
          "label": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "TplVarDef": {
        "type": "string",
        "enum": [
          "strings",
          "item_types",
          "relation_types",
          "item_ids",
          "relation_ids"
        ]
      },
      "TplVarId": {
        "type": "string"
      },
      "TraceItem": {
        "oneOf": [
          {
            "title": "operation",
            "type": "string",
            "enum": [
              "operation"
            ]
          },
          {
            "title": "service",
            "type": "object",
            "required": [
              "service"
            ],
            "properties": {
              "service": {
                "$ref": "#/components/schemas/CombineScores"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "TraceMetric": {
        "type": "string",
        "enum": [
          "duration",
          "busy",
          "call_rate",
          "error_rate"
        ]
      },
      "TraceParameter": {
        "type": "string",
        "enum": [
          "mean",
          "lower_bound",
          "higher_bound"
        ]
      },
      "Tree": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Node"
        }
      },
      "TreeInfo": {
        "title": "TreeInfo",
        "oneOf": [
          {
            "title": "item",
            "type": "object",
            "required": [
              "collected",
              "errors",
              "items",
              "keys",
              "metrics",
              "name",
              "paths",
              "query",
              "type"
            ],
            "properties": {
              "collected": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CollectedInfo"
                }
              },
              "errors": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/QualifiedItemName"
                },
                "uniqueItems": true
              },
              "keys": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LabelName"
                },
                "uniqueItems": true
              },
              "metrics": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MetricName"
                },
                "uniqueItems": true
              },
              "name": {
                "$ref": "#/components/schemas/QualifiedItemName"
              },
              "paths": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "query": {
                "$ref": "#/components/schemas/MetricSelector"
              },
              "type": {
                "type": "string",
                "enum": [
                  "item"
                ]
              }
            }
          },
          {
            "title": "metric",
            "type": "object",
            "required": [
              "collected",
              "metric",
              "name",
              "paths",
              "type"
            ],
            "properties": {
              "collected": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CollectedInfo"
                }
              },
              "metric": {
                "$ref": "#/components/schemas/Metric"
              },
              "name": {
                "$ref": "#/components/schemas/MetricName"
              },
              "paths": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "type": {
                "type": "string",
                "enum": [
                  "metric"
                ]
              }
            }
          }
        ]
      },
      "TypeRangeDashboard": {
        "type": "object",
        "required": [
          "panels"
        ],
        "properties": {
          "panels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Panel_for_TypeRangeWidget"
            }
          }
        }
      },
      "TypeSet": {
        "type": "object",
        "required": [
          "items",
          "relations"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relative_ItemTypeId"
            },
            "uniqueItems": true
          },
          "relations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relative_RelationTypeId"
            },
            "uniqueItems": true
          }
        }
      },
      "Unit": {
        "type": "string"
      },
      "UnverifiedAlertRuleForms": {
        "$ref": "#/components/schemas/AlertRuleForms"
      },
      "Value": {
        "description": "A floating-point value as returned by prometheus. Prometheus uses a string representation for floating-point numbers because JSON does not allow any of the \"special\" floating-point values for its number type. Special values are \"NaN\", \"+Inf\" and \"-Inf\".",
        "type": "number",
        "format": "double"
      },
      "ValueSelector": {
        "oneOf": [
          {
            "title": "string",
            "type": "object",
            "required": [
              "string"
            ],
            "properties": {
              "string": {
                "$ref": "#/components/schemas/StringSelector"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "Versioned_for_SingleVersionInfo_and_StatusChange": {
        "type": "object",
        "required": [
          "value",
          "version"
        ],
        "properties": {
          "value": {
            "$ref": "#/components/schemas/StatusChange"
          },
          "version": {
            "$ref": "#/components/schemas/SingleVersionInfo"
          }
        }
      },
      "View": {
        "title": "View",
        "type": "object",
        "required": [
          "defaultTopologyFilters",
          "elements",
          "itemTypes",
          "name",
          "topologies"
        ],
        "properties": {
          "defaultItemType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Absolute_ItemTypeId"
              }
            ],
            "nullable": true
          },
          "defaultTopology": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopologyId"
              }
            ],
            "nullable": true
          },
          "defaultTopologyFilters": {
            "type": "object",
            "additionalProperties": true
          },
          "elements": {
            "$ref": "#/components/schemas/ViewElements"
          },
          "itemTypes": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ItemTypeDefinition"
            }
          },
          "name": {
            "type": "string"
          },
          "svgSource": {
            "type": "string",
            "nullable": true
          },
          "svgSourceDark": {
            "type": "string",
            "nullable": true
          },
          "topologies": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Topology"
            }
          }
        }
      },
      "ViewElements": {
        "type": "object",
        "required": [
          "external",
          "internal"
        ],
        "properties": {
          "external": {
            "$ref": "#/components/schemas/Elements"
          },
          "internal": {
            "$ref": "#/components/schemas/Elements"
          }
        }
      },
      "Views": {
        "title": "Views",
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/View"
        }
      },
      "Widget_for_InstanceWidget": {
        "type": "object",
        "oneOf": [
          {
            "title": "graph",
            "type": "object",
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "metric",
                  "widget_type"
                ],
                "properties": {
                  "metric": {
                    "$ref": "#/components/schemas/DashboardMetricId"
                  },
                  "min_max": {
                    "default": true,
                    "type": "boolean"
                  },
                  "widget_type": {
                    "type": "string",
                    "enum": [
                      "lines"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "graph_type",
                  "widget_type"
                ],
                "properties": {
                  "graph_type": {
                    "$ref": "#/components/schemas/AnomalyTracesGraphType"
                  },
                  "labels": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "nullable": true
                  },
                  "widget_type": {
                    "type": "string",
                    "enum": [
                      "anomaly_traces"
                    ]
                  }
                }
              }
            ],
            "required": [
              "graph"
            ],
            "properties": {
              "graph": {
                "type": "string",
                "enum": [
                  "range"
                ]
              }
            }
          },
          {
            "title": "graph",
            "type": "object",
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "metric",
                  "widget_type"
                ],
                "properties": {
                  "metric": {
                    "$ref": "#/components/schemas/DashboardMetricId"
                  },
                  "widget_type": {
                    "type": "string",
                    "enum": [
                      "number"
                    ]
                  }
                }
              },
              {
                "description": "Ant Design Chart: gauge TODO: min and max should be an expression for example get info from properties to know the maximum cpu limit",
                "type": "object",
                "required": [
                  "max",
                  "metric",
                  "widget_type"
                ],
                "properties": {
                  "max": {
                    "type": "number",
                    "format": "double"
                  },
                  "metric": {
                    "$ref": "#/components/schemas/DashboardMetricId"
                  },
                  "min": {
                    "default": 0.0,
                    "type": "number",
                    "format": "double"
                  },
                  "widget_type": {
                    "type": "string",
                    "enum": [
                      "meter"
                    ]
                  }
                }
              },
              {
                "description": "Ant Design Chart: bullet Not yet implement in frontend!! TODO: min and max should be an expression",
                "type": "object",
                "required": [
                  "max",
                  "metrics",
                  "widget_type"
                ],
                "properties": {
                  "max": {
                    "type": "number",
                    "format": "double"
                  },
                  "metrics": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DashboardMetricId"
                    }
                  },
                  "min": {
                    "default": 0.0,
                    "type": "number",
                    "format": "double"
                  },
                  "widget_type": {
                    "type": "string",
                    "enum": [
                      "bar"
                    ]
                  }
                }
              }
            ],
            "required": [
              "graph"
            ],
            "properties": {
              "graph": {
                "type": "string",
                "enum": [
                  "instant"
                ]
              }
            }
          }
        ],
        "required": [
          "name"
        ],
        "properties": {
          "documentation": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Widget_for_TypeRangeWidget": {
        "type": "object",
        "oneOf": [
          {
            "title": "lines",
            "type": "object",
            "required": [
              "metric",
              "select",
              "widget_type"
            ],
            "properties": {
              "metric": {
                "$ref": "#/components/schemas/DashboardMetricId"
              },
              "select": {
                "$ref": "#/components/schemas/SelectItem"
              },
              "widget_type": {
                "type": "string",
                "enum": [
                  "lines"
                ]
              }
            }
          },
          {
            "title": "anomaly_traces",
            "type": "object",
            "required": [
              "graph_type",
              "widget_type"
            ],
            "properties": {
              "graph_type": {
                "$ref": "#/components/schemas/AnomalyTracesGraphType"
              },
              "labels": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "nullable": true
              },
              "widget_type": {
                "type": "string",
                "enum": [
                  "anomaly_traces"
                ]
              }
            }
          }
        ],
        "required": [
          "name"
        ],
        "properties": {
          "documentation": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          }
        }
      }
    }
  }
}
